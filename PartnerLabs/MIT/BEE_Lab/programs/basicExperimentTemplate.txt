'CR1000 Series Datalogger
'program author: MIT CECI - NHI

'Dependencies: 
'   experimentLength => Int for the total hours the experiment will run
'   profile => String with the profile
'   totalLoads => The total loads that we will control. Up to 16.
'   timeUnit => The time unit we'll use. 60 for seconds (change every minute). 1 for minutes (change every hour).
'   sampleRate => The number of SECONDS of between each scan.


Const ExperimentLength = ${experimentLength}$
Const TotalLoads = ${totalLoads}$
Const SampleEverySecs = ${sampleRate}$
Const InString = "${profile}$"

Const TimeMeasurement = ${timeUnit}$ ' Change to 60 to use seconds. Change to 1 to use minutes.


' Convert the experiment length to hours. And then divide for the time we are waiting
' between scans. This way we do not exceed the experiment time limit.
' We are scanning every 30 seconds
Const MaxScanCount = ((ExperimentLength * TimeMeasurement * 60) INTDV SampleEverySecs) + 1

Public scansSinceLastChange as Float
Public Channels(${totalLoads}$)
Public Source(16)
Public InputLoads(ExperimentLength * (TotalLoads + 1))
Public group
Public StartGroupIndex
Public intervalTime As Long
Public i, channel ' For loops vars

Sub setUpLoads
  SplitStr (InputLoads(1),InString,",",(1 + TotalLoads) * ExperimentLength,0)

  For i = 1 To ExperimentLength * (TotalLoads + 1)
    If FIX(InputLoads(i)) = NAN
      If (i MOD (TotalLoads + 1)) = 1
        InputLoads(i) = 60
      Else
        InputLoads(i) = 0
      EndIf
    Endif
  Next
EndSub

'Subroutine turn all the loads off
Sub turnLoadsOff (Source(16))
  For i = 1 To 16
    Source(i) = 0
  Next
  SDMCD16AC (Source,1,0) ' Send loads
EndSub

' Map from index to channel number
Sub setUpChannels
  Channels(1) = 1
  Channels(2) = 3
  Channels(3) = 5
  Channels(4) = 11
EndSub

' For each channel that we are using, setup the `source(channel)` value to send it
' to the switch and turn the channel on/off.
'
' Remember that the profile has the DURATION on the first position. So a profile like
' 120 1 0 0 0 means that for 120 minutes (or seconds - se below *) the first load will
' be on.
'
' * The minutes or seconds will depend on the TimeMeasurement constant. If it's 1
' it's seconds, if it's 60 it's minutes.
Sub sendLoads
  For channel = 1 To TotalLoads
    Source( Channels(channel) ) = InputLoads(StartGroupIndex + channel)
  Next
  SDMCD16AC (Source,1,0) ' Send loads
EndSub

'Main Program
BeginProg
  Call setUpChannels
  Call setUpLoads  'We do not need RS232 connection anymore :D!
  Call turnLoadsOff(Source)

  StartGroupIndex = 1
  scansSinceLastChange = -0.5 * TimeMeasurement
  group = 0 ' The next index we will look for
  Call sendLoads

  intervalTime = InputLoads(1)

  Scan(SampleEverySecs, Sec, 1, MaxScanCount)
    scansSinceLastChange = scansSinceLastChange + (0.5 * TimeMeasurement)
    If scansSinceLastChange >= intervalTime
      group    = (group + 1) MOD ExperimentLength

      ' The first index of the group. Remember that each group will have totalLoads + 1
      ' elements in it  (the time that group is active). This "time" value is the first
      ' value of the group.
      StartGroupIndex = group * (TotalLoads + 1) + 1
      intervalTime = InputLoads(StartGroupIndex)
    
      Call sendLoads
      scansSinceLastChange = 0
     EndIf
  NextScan
  Call turnLoadsOff(Source)
EndProg