//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LabProxy.iLabSbServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://ilab.mit.edu", ConfigurationName="iLabSbServiceReference.IBatchSB")]
    public interface IBatchSB {
        
        // CODEGEN: Generating message contract since message GetLabStatusRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/GetLabStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.GetLabStatusResponse GetLabStatus(LabProxy.iLabSbServiceReference.GetLabStatusRequest request);
        
        // CODEGEN: Generating message contract since message GetEffectiveQueueLengthRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/GetEffectiveQueueLength", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.GetEffectiveQueueLengthResponse GetEffectiveQueueLength(LabProxy.iLabSbServiceReference.GetEffectiveQueueLengthRequest request);
        
        // CODEGEN: Generating message contract since message GetLabInfoRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/GetLabInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.GetLabInfoResponse GetLabInfo(LabProxy.iLabSbServiceReference.GetLabInfoRequest request);
        
        // CODEGEN: Generating message contract since message GetLabConfigurationRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/GetLabConfiguration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.GetLabConfigurationResponse GetLabConfiguration(LabProxy.iLabSbServiceReference.GetLabConfigurationRequest request);
        
        // CODEGEN: Generating message contract since message ValidateRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/Validate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.ValidateResponse Validate(LabProxy.iLabSbServiceReference.ValidateRequest request);
        
        // CODEGEN: Generating message contract since message SubmitRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/Submit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.SubmitResponse Submit(LabProxy.iLabSbServiceReference.SubmitRequest request);
        
        // CODEGEN: Generating message contract since message GetExperimentStatusRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/GetExperimentStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.GetExperimentStatusResponse GetExperimentStatus(LabProxy.iLabSbServiceReference.GetExperimentStatusRequest request);
        
        // CODEGEN: Generating message contract since message CancelRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/Cancel", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.CancelResponse Cancel(LabProxy.iLabSbServiceReference.CancelRequest request);
        
        // CODEGEN: Generating message contract since message RetrieveResultRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/RetrieveResult", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.RetrieveResultResponse RetrieveResult(LabProxy.iLabSbServiceReference.RetrieveResultRequest request);
        
        // CODEGEN: Generating message contract since message NotifyRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/Notify", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.NotifyResponse Notify(LabProxy.iLabSbServiceReference.NotifyRequest request);
        
        // CODEGEN: Generating message contract since message SaveClientItemRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/SaveClientItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.SaveClientItemResponse SaveClientItem(LabProxy.iLabSbServiceReference.SaveClientItemRequest request);
        
        // CODEGEN: Generating message contract since message LoadClientItemRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/LoadClientItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.LoadClientItemResponse LoadClientItem(LabProxy.iLabSbServiceReference.LoadClientItemRequest request);
        
        // CODEGEN: Generating message contract since message DeleteClientItemRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/DeleteClientItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.DeleteClientItemResponse DeleteClientItem(LabProxy.iLabSbServiceReference.DeleteClientItemRequest request);
        
        // CODEGEN: Generating message contract since message ListAllClientItemsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/ListAllClientItems", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.ListAllClientItemsResponse ListAllClientItems(LabProxy.iLabSbServiceReference.ListAllClientItemsRequest request);
        
        // CODEGEN: Generating message contract since message RetrieveSpecificationRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/RetrieveSpecification", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.RetrieveSpecificationResponse RetrieveSpecification(LabProxy.iLabSbServiceReference.RetrieveSpecificationRequest request);
        
        // CODEGEN: Generating message contract since message RetrieveLabConfigurationRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/RetrieveLabConfiguration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.RetrieveLabConfigurationResponse RetrieveLabConfiguration(LabProxy.iLabSbServiceReference.RetrieveLabConfigurationRequest request);
        
        // CODEGEN: Generating message contract since message SaveAnnotationRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/SaveAnnotation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.SaveAnnotationResponse SaveAnnotation(LabProxy.iLabSbServiceReference.SaveAnnotationRequest request);
        
        // CODEGEN: Generating message contract since message RetrieveAnnotationRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/RetrieveAnnotation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.RetrieveAnnotationResponse RetrieveAnnotation(LabProxy.iLabSbServiceReference.RetrieveAnnotationRequest request);
        
        // CODEGEN: Generating message contract since message GetExperimentInformationRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/GetExperimentInformation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.GetExperimentInformationResponse GetExperimentInformation(LabProxy.iLabSbServiceReference.GetExperimentInformationRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ilab.mit.edu")]
    public partial class sbAuthHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long couponIDField;
        
        private string couponPassKeyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long couponID {
            get {
                return this.couponIDField;
            }
            set {
                this.couponIDField = value;
                this.RaisePropertyChanged("couponID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string couponPassKey {
            get {
                return this.couponPassKeyField;
            }
            set {
                this.couponPassKeyField = value;
                this.RaisePropertyChanged("couponPassKey");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ilab.mit.edu/iLabs/type")]
    public partial class Ticket : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long ticketIdField;
        
        private string typeField;
        
        private long couponIdField;
        
        private string issuerGuidField;
        
        private string sponsorGuidField;
        
        private string redeemerGuidField;
        
        private System.DateTime creationTimeField;
        
        private long durationField;
        
        private bool isCancelledField;
        
        private string payloadField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long ticketId {
            get {
                return this.ticketIdField;
            }
            set {
                this.ticketIdField = value;
                this.RaisePropertyChanged("ticketId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long couponId {
            get {
                return this.couponIdField;
            }
            set {
                this.couponIdField = value;
                this.RaisePropertyChanged("couponId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string issuerGuid {
            get {
                return this.issuerGuidField;
            }
            set {
                this.issuerGuidField = value;
                this.RaisePropertyChanged("issuerGuid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string sponsorGuid {
            get {
                return this.sponsorGuidField;
            }
            set {
                this.sponsorGuidField = value;
                this.RaisePropertyChanged("sponsorGuid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string redeemerGuid {
            get {
                return this.redeemerGuidField;
            }
            set {
                this.redeemerGuidField = value;
                this.RaisePropertyChanged("redeemerGuid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public System.DateTime creationTime {
            get {
                return this.creationTimeField;
            }
            set {
                this.creationTimeField = value;
                this.RaisePropertyChanged("creationTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public long duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
                this.RaisePropertyChanged("duration");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public bool isCancelled {
            get {
                return this.isCancelledField;
            }
            set {
                this.isCancelledField = value;
                this.RaisePropertyChanged("isCancelled");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string payload {
            get {
                return this.payloadField;
            }
            set {
                this.payloadField = value;
                this.RaisePropertyChanged("payload");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ilab.mit.edu/iLabs/type")]
    public partial class ExperimentSummary : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long experimentIdField;
        
        private long durationField;
        
        private System.DateTime scheduledStartField;
        
        private System.DateTime creationTimeField;
        
        private System.DateTime closeTimeField;
        
        private int statusField;
        
        private int recordCountField;
        
        private string essGuidField;
        
        private string serviceBrokerGuidField;
        
        private string userNameField;
        
        private string groupNameField;
        
        private string labServerGuidField;
        
        private string labServerNameField;
        
        private string clientNameField;
        
        private string clientVersionField;
        
        private string annotationField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long experimentId {
            get {
                return this.experimentIdField;
            }
            set {
                this.experimentIdField = value;
                this.RaisePropertyChanged("experimentId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
                this.RaisePropertyChanged("duration");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.DateTime scheduledStart {
            get {
                return this.scheduledStartField;
            }
            set {
                this.scheduledStartField = value;
                this.RaisePropertyChanged("scheduledStart");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public System.DateTime creationTime {
            get {
                return this.creationTimeField;
            }
            set {
                this.creationTimeField = value;
                this.RaisePropertyChanged("creationTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public System.DateTime closeTime {
            get {
                return this.closeTimeField;
            }
            set {
                this.closeTimeField = value;
                this.RaisePropertyChanged("closeTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public int status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public int recordCount {
            get {
                return this.recordCountField;
            }
            set {
                this.recordCountField = value;
                this.RaisePropertyChanged("recordCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string essGuid {
            get {
                return this.essGuidField;
            }
            set {
                this.essGuidField = value;
                this.RaisePropertyChanged("essGuid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string serviceBrokerGuid {
            get {
                return this.serviceBrokerGuidField;
            }
            set {
                this.serviceBrokerGuidField = value;
                this.RaisePropertyChanged("serviceBrokerGuid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
                this.RaisePropertyChanged("userName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string groupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
                this.RaisePropertyChanged("groupName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string labServerGuid {
            get {
                return this.labServerGuidField;
            }
            set {
                this.labServerGuidField = value;
                this.RaisePropertyChanged("labServerGuid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string labServerName {
            get {
                return this.labServerNameField;
            }
            set {
                this.labServerNameField = value;
                this.RaisePropertyChanged("labServerName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string clientName {
            get {
                return this.clientNameField;
            }
            set {
                this.clientNameField = value;
                this.RaisePropertyChanged("clientName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string clientVersion {
            get {
                return this.clientVersionField;
            }
            set {
                this.clientVersionField = value;
                this.RaisePropertyChanged("clientVersion");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public string annotation {
            get {
                return this.annotationField;
            }
            set {
                this.annotationField = value;
                this.RaisePropertyChanged("annotation");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ilab.mit.edu/iLabs/type")]
    public partial class ExperimentRecord : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string typeField;
        
        private string submitterField;
        
        private int sequenceNumField;
        
        private System.DateTime timestampField;
        
        private bool xmlSearchableField;
        
        private string contentsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string submitter {
            get {
                return this.submitterField;
            }
            set {
                this.submitterField = value;
                this.RaisePropertyChanged("submitter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int sequenceNum {
            get {
                return this.sequenceNumField;
            }
            set {
                this.sequenceNumField = value;
                this.RaisePropertyChanged("sequenceNum");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public System.DateTime timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
                this.RaisePropertyChanged("timestamp");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool xmlSearchable {
            get {
                return this.xmlSearchableField;
            }
            set {
                this.xmlSearchableField = value;
                this.RaisePropertyChanged("xmlSearchable");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string contents {
            get {
                return this.contentsField;
            }
            set {
                this.contentsField = value;
                this.RaisePropertyChanged("contents");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ilab.mit.edu/iLabs/type")]
    public partial class Experiment : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long experimentIdField;
        
        private string issuerGuidField;
        
        private ExperimentRecord[] recordsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long experimentId {
            get {
                return this.experimentIdField;
            }
            set {
                this.experimentIdField = value;
                this.RaisePropertyChanged("experimentId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string issuerGuid {
            get {
                return this.issuerGuidField;
            }
            set {
                this.issuerGuidField = value;
                this.RaisePropertyChanged("issuerGuid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public ExperimentRecord[] records {
            get {
                return this.recordsField;
            }
            set {
                this.recordsField = value;
                this.RaisePropertyChanged("records");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ilab.mit.edu/iLabs/type")]
    public partial class Criterion : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string attributeField;
        
        private string predicateField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string attribute {
            get {
                return this.attributeField;
            }
            set {
                this.attributeField = value;
                this.RaisePropertyChanged("attribute");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string predicate {
            get {
                return this.predicateField;
            }
            set {
                this.predicateField = value;
                this.RaisePropertyChanged("predicate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ilab.mit.edu/iLabs/type")]
    public partial class StorageStatus : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long experimentIdField;
        
        private int statusField;
        
        private int recordCountField;
        
        private System.DateTime creationTimeField;
        
        private System.DateTime closeTimeField;
        
        private System.DateTime lastModifiedField;
        
        private string issuerGuidField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long experimentId {
            get {
                return this.experimentIdField;
            }
            set {
                this.experimentIdField = value;
                this.RaisePropertyChanged("experimentId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int recordCount {
            get {
                return this.recordCountField;
            }
            set {
                this.recordCountField = value;
                this.RaisePropertyChanged("recordCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public System.DateTime creationTime {
            get {
                return this.creationTimeField;
            }
            set {
                this.creationTimeField = value;
                this.RaisePropertyChanged("creationTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public System.DateTime closeTime {
            get {
                return this.closeTimeField;
            }
            set {
                this.closeTimeField = value;
                this.RaisePropertyChanged("closeTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public System.DateTime lastModified {
            get {
                return this.lastModifiedField;
            }
            set {
                this.lastModifiedField = value;
                this.RaisePropertyChanged("lastModified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string issuerGuid {
            get {
                return this.issuerGuidField;
            }
            set {
                this.issuerGuidField = value;
                this.RaisePropertyChanged("issuerGuid");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ilab.mit.edu/iLabs/type")]
    public partial class ServiceDescription : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string serviceProviderInfoField;
        
        private Coupon couponField;
        
        private string consumerInfoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string serviceProviderInfo {
            get {
                return this.serviceProviderInfoField;
            }
            set {
                this.serviceProviderInfoField = value;
                this.RaisePropertyChanged("serviceProviderInfo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public Coupon coupon {
            get {
                return this.couponField;
            }
            set {
                this.couponField = value;
                this.RaisePropertyChanged("coupon");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string consumerInfo {
            get {
                return this.consumerInfoField;
            }
            set {
                this.consumerInfoField = value;
                this.RaisePropertyChanged("consumerInfo");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ilab.mit.edu/iLabs/type")]
    public partial class Coupon : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long couponIdField;
        
        private string issuerGuidField;
        
        private string passkeyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long couponId {
            get {
                return this.couponIdField;
            }
            set {
                this.couponIdField = value;
                this.RaisePropertyChanged("couponId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string issuerGuid {
            get {
                return this.issuerGuidField;
            }
            set {
                this.issuerGuidField = value;
                this.RaisePropertyChanged("issuerGuid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string passkey {
            get {
                return this.passkeyField;
            }
            set {
                this.passkeyField = value;
                this.RaisePropertyChanged("passkey");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ilab.mit.edu/iLabs/type")]
    public partial class InitAuthHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string initPasskeyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string initPasskey {
            get {
                return this.initPasskeyField;
            }
            set {
                this.initPasskeyField = value;
                this.RaisePropertyChanged("initPasskey");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ilab.mit.edu/iLabs/type")]
    public partial class StatusNotificationReport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int alertCodeField;
        
        private string serviceGuidField;
        
        private System.DateTime timeField;
        
        private string payloadField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int alertCode {
            get {
                return this.alertCodeField;
            }
            set {
                this.alertCodeField = value;
                this.RaisePropertyChanged("alertCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string serviceGuid {
            get {
                return this.serviceGuidField;
            }
            set {
                this.serviceGuidField = value;
                this.RaisePropertyChanged("serviceGuid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.DateTime time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
                this.RaisePropertyChanged("time");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string payload {
            get {
                return this.payloadField;
            }
            set {
                this.payloadField = value;
                this.RaisePropertyChanged("payload");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ilab.mit.edu/iLabs/type")]
    public partial class StatusReport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool onlineField;
        
        private string serviceGuidField;
        
        private string payloadField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool online {
            get {
                return this.onlineField;
            }
            set {
                this.onlineField = value;
                this.RaisePropertyChanged("online");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string serviceGuid {
            get {
                return this.serviceGuidField;
            }
            set {
                this.serviceGuidField = value;
                this.RaisePropertyChanged("serviceGuid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string payload {
            get {
                return this.payloadField;
            }
            set {
                this.payloadField = value;
                this.RaisePropertyChanged("payload");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OperationAuthHeader))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AgentAuthHeader))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ilab.mit.edu/iLabs/type")]
    public partial class AuthenticationHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Coupon couponField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public Coupon coupon {
            get {
                return this.couponField;
            }
            set {
                this.couponField = value;
                this.RaisePropertyChanged("coupon");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ilab.mit.edu/iLabs/type")]
    public partial class OperationAuthHeader : AuthenticationHeader {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ilab.mit.edu/iLabs/type")]
    public partial class AgentAuthHeader : AuthenticationHeader {
        
        private string agentGuidField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string agentGuid {
            get {
                return this.agentGuidField;
            }
            set {
                this.agentGuidField = value;
                this.RaisePropertyChanged("agentGuid");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ilab.mit.edu/iLabs/type")]
    public partial class ProcessAgent : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string agentGuidField;
        
        private string agentNameField;
        
        private string typeField;
        
        private string domainGuidField;
        
        private string codeBaseUrlField;
        
        private string webServiceUrlField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string agentGuid {
            get {
                return this.agentGuidField;
            }
            set {
                this.agentGuidField = value;
                this.RaisePropertyChanged("agentGuid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string agentName {
            get {
                return this.agentNameField;
            }
            set {
                this.agentNameField = value;
                this.RaisePropertyChanged("agentName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string domainGuid {
            get {
                return this.domainGuidField;
            }
            set {
                this.domainGuidField = value;
                this.RaisePropertyChanged("domainGuid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string codeBaseUrl {
            get {
                return this.codeBaseUrlField;
            }
            set {
                this.codeBaseUrlField = value;
                this.RaisePropertyChanged("codeBaseUrl");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string webServiceUrl {
            get {
                return this.webServiceUrlField;
            }
            set {
                this.webServiceUrlField = value;
                this.RaisePropertyChanged("webServiceUrl");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ilab.mit.edu")]
    public partial class ExperimentInformation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long experimentIDField;
        
        private int labServerIDField;
        
        private int userIDField;
        
        private int effectiveGroupIDField;
        
        private System.DateTime submissionTimeField;
        
        private System.DateTime completionTimeField;
        
        private System.DateTime expirationTimeField;
        
        private double minTimeToLiveField;
        
        private int priorityHintField;
        
        private int statusCodeField;
        
        private string[] validationWarningMessagesField;
        
        private string validationErrorMessageField;
        
        private string[] executionWarningMessagesField;
        
        private string executionErrorMessageField;
        
        private string annotationField;
        
        private string xmlResultExtensionField;
        
        private string xmlBlobExtensionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long experimentID {
            get {
                return this.experimentIDField;
            }
            set {
                this.experimentIDField = value;
                this.RaisePropertyChanged("experimentID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int labServerID {
            get {
                return this.labServerIDField;
            }
            set {
                this.labServerIDField = value;
                this.RaisePropertyChanged("labServerID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int userID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
                this.RaisePropertyChanged("userID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int effectiveGroupID {
            get {
                return this.effectiveGroupIDField;
            }
            set {
                this.effectiveGroupIDField = value;
                this.RaisePropertyChanged("effectiveGroupID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public System.DateTime submissionTime {
            get {
                return this.submissionTimeField;
            }
            set {
                this.submissionTimeField = value;
                this.RaisePropertyChanged("submissionTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public System.DateTime completionTime {
            get {
                return this.completionTimeField;
            }
            set {
                this.completionTimeField = value;
                this.RaisePropertyChanged("completionTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public System.DateTime expirationTime {
            get {
                return this.expirationTimeField;
            }
            set {
                this.expirationTimeField = value;
                this.RaisePropertyChanged("expirationTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public double minTimeToLive {
            get {
                return this.minTimeToLiveField;
            }
            set {
                this.minTimeToLiveField = value;
                this.RaisePropertyChanged("minTimeToLive");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public int priorityHint {
            get {
                return this.priorityHintField;
            }
            set {
                this.priorityHintField = value;
                this.RaisePropertyChanged("priorityHint");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public int statusCode {
            get {
                return this.statusCodeField;
            }
            set {
                this.statusCodeField = value;
                this.RaisePropertyChanged("statusCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=10)]
        public string[] validationWarningMessages {
            get {
                return this.validationWarningMessagesField;
            }
            set {
                this.validationWarningMessagesField = value;
                this.RaisePropertyChanged("validationWarningMessages");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string validationErrorMessage {
            get {
                return this.validationErrorMessageField;
            }
            set {
                this.validationErrorMessageField = value;
                this.RaisePropertyChanged("validationErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=12)]
        public string[] executionWarningMessages {
            get {
                return this.executionWarningMessagesField;
            }
            set {
                this.executionWarningMessagesField = value;
                this.RaisePropertyChanged("executionWarningMessages");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string executionErrorMessage {
            get {
                return this.executionErrorMessageField;
            }
            set {
                this.executionErrorMessageField = value;
                this.RaisePropertyChanged("executionErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string annotation {
            get {
                return this.annotationField;
            }
            set {
                this.annotationField = value;
                this.RaisePropertyChanged("annotation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public string xmlResultExtension {
            get {
                return this.xmlResultExtensionField;
            }
            set {
                this.xmlResultExtensionField = value;
                this.RaisePropertyChanged("xmlResultExtension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public string xmlBlobExtension {
            get {
                return this.xmlBlobExtensionField;
            }
            set {
                this.xmlBlobExtensionField = value;
                this.RaisePropertyChanged("xmlBlobExtension");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ilab.mit.edu")]
    public partial class ResultReport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int statusCodeField;
        
        private string experimentResultsField;
        
        private string xmlResultExtensionField;
        
        private string xmlBlobExtensionField;
        
        private string[] warningMessagesField;
        
        private string errorMessageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int statusCode {
            get {
                return this.statusCodeField;
            }
            set {
                this.statusCodeField = value;
                this.RaisePropertyChanged("statusCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string experimentResults {
            get {
                return this.experimentResultsField;
            }
            set {
                this.experimentResultsField = value;
                this.RaisePropertyChanged("experimentResults");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string xmlResultExtension {
            get {
                return this.xmlResultExtensionField;
            }
            set {
                this.xmlResultExtensionField = value;
                this.RaisePropertyChanged("xmlResultExtension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string xmlBlobExtension {
            get {
                return this.xmlBlobExtensionField;
            }
            set {
                this.xmlBlobExtensionField = value;
                this.RaisePropertyChanged("xmlBlobExtension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=4)]
        public string[] warningMessages {
            get {
                return this.warningMessagesField;
            }
            set {
                this.warningMessagesField = value;
                this.RaisePropertyChanged("warningMessages");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("errorMessage");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ilab.mit.edu")]
    public partial class ExperimentStatus : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int statusCodeField;
        
        private WaitEstimate waitField;
        
        private double estRuntimeField;
        
        private double estRemainingRuntimeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int statusCode {
            get {
                return this.statusCodeField;
            }
            set {
                this.statusCodeField = value;
                this.RaisePropertyChanged("statusCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public WaitEstimate wait {
            get {
                return this.waitField;
            }
            set {
                this.waitField = value;
                this.RaisePropertyChanged("wait");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public double estRuntime {
            get {
                return this.estRuntimeField;
            }
            set {
                this.estRuntimeField = value;
                this.RaisePropertyChanged("estRuntime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public double estRemainingRuntime {
            get {
                return this.estRemainingRuntimeField;
            }
            set {
                this.estRemainingRuntimeField = value;
                this.RaisePropertyChanged("estRemainingRuntime");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ilab.mit.edu")]
    public partial class WaitEstimate : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int effectiveQueueLengthField;
        
        private double estWaitField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int effectiveQueueLength {
            get {
                return this.effectiveQueueLengthField;
            }
            set {
                this.effectiveQueueLengthField = value;
                this.RaisePropertyChanged("effectiveQueueLength");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public double estWait {
            get {
                return this.estWaitField;
            }
            set {
                this.estWaitField = value;
                this.RaisePropertyChanged("estWait");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ilab.mit.edu")]
    public partial class LabExperimentStatus : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ExperimentStatus statusReportField;
        
        private double minTimetoLiveField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ExperimentStatus statusReport {
            get {
                return this.statusReportField;
            }
            set {
                this.statusReportField = value;
                this.RaisePropertyChanged("statusReport");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public double minTimetoLive {
            get {
                return this.minTimetoLiveField;
            }
            set {
                this.minTimetoLiveField = value;
                this.RaisePropertyChanged("minTimetoLive");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ilab.mit.edu")]
    public partial class ClientSubmissionReport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ValidationReport vReportField;
        
        private int experimentIDField;
        
        private double minTimeToLiveField;
        
        private WaitEstimate waitField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ValidationReport vReport {
            get {
                return this.vReportField;
            }
            set {
                this.vReportField = value;
                this.RaisePropertyChanged("vReport");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int experimentID {
            get {
                return this.experimentIDField;
            }
            set {
                this.experimentIDField = value;
                this.RaisePropertyChanged("experimentID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public double minTimeToLive {
            get {
                return this.minTimeToLiveField;
            }
            set {
                this.minTimeToLiveField = value;
                this.RaisePropertyChanged("minTimeToLive");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public WaitEstimate wait {
            get {
                return this.waitField;
            }
            set {
                this.waitField = value;
                this.RaisePropertyChanged("wait");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ilab.mit.edu")]
    public partial class ValidationReport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool acceptedField;
        
        private string[] warningMessagesField;
        
        private string errorMessageField;
        
        private double estRuntimeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool accepted {
            get {
                return this.acceptedField;
            }
            set {
                this.acceptedField = value;
                this.RaisePropertyChanged("accepted");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public string[] warningMessages {
            get {
                return this.warningMessagesField;
            }
            set {
                this.warningMessagesField = value;
                this.RaisePropertyChanged("warningMessages");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("errorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public double estRuntime {
            get {
                return this.estRuntimeField;
            }
            set {
                this.estRuntimeField = value;
                this.RaisePropertyChanged("estRuntime");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ilab.mit.edu")]
    public partial class LabStatus : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool onlineField;
        
        private string labStatusMessageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool online {
            get {
                return this.onlineField;
            }
            set {
                this.onlineField = value;
                this.RaisePropertyChanged("online");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string labStatusMessage {
            get {
                return this.labStatusMessageField;
            }
            set {
                this.labStatusMessageField = value;
                this.RaisePropertyChanged("labStatusMessage");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLabStatus", WrapperNamespace="http://ilab.mit.edu", IsWrapped=true)]
    public partial class GetLabStatusRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu")]
        public LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu", Order=0)]
        public string labServerID;
        
        public GetLabStatusRequest() {
        }
        
        public GetLabStatusRequest(LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader, string labServerID) {
            this.sbAuthHeader = sbAuthHeader;
            this.labServerID = labServerID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLabStatusResponse", WrapperNamespace="http://ilab.mit.edu", IsWrapped=true)]
    public partial class GetLabStatusResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu", Order=0)]
        public LabProxy.iLabSbServiceReference.LabStatus GetLabStatusResult;
        
        public GetLabStatusResponse() {
        }
        
        public GetLabStatusResponse(LabProxy.iLabSbServiceReference.LabStatus GetLabStatusResult) {
            this.GetLabStatusResult = GetLabStatusResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetEffectiveQueueLength", WrapperNamespace="http://ilab.mit.edu", IsWrapped=true)]
    public partial class GetEffectiveQueueLengthRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu")]
        public LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu", Order=0)]
        public string labServerID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu", Order=1)]
        public int priorityHint;
        
        public GetEffectiveQueueLengthRequest() {
        }
        
        public GetEffectiveQueueLengthRequest(LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader, string labServerID, int priorityHint) {
            this.sbAuthHeader = sbAuthHeader;
            this.labServerID = labServerID;
            this.priorityHint = priorityHint;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetEffectiveQueueLengthResponse", WrapperNamespace="http://ilab.mit.edu", IsWrapped=true)]
    public partial class GetEffectiveQueueLengthResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu", Order=0)]
        public LabProxy.iLabSbServiceReference.WaitEstimate GetEffectiveQueueLengthResult;
        
        public GetEffectiveQueueLengthResponse() {
        }
        
        public GetEffectiveQueueLengthResponse(LabProxy.iLabSbServiceReference.WaitEstimate GetEffectiveQueueLengthResult) {
            this.GetEffectiveQueueLengthResult = GetEffectiveQueueLengthResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLabInfo", WrapperNamespace="http://ilab.mit.edu", IsWrapped=true)]
    public partial class GetLabInfoRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu")]
        public LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu", Order=0)]
        public string labServerID;
        
        public GetLabInfoRequest() {
        }
        
        public GetLabInfoRequest(LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader, string labServerID) {
            this.sbAuthHeader = sbAuthHeader;
            this.labServerID = labServerID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLabInfoResponse", WrapperNamespace="http://ilab.mit.edu", IsWrapped=true)]
    public partial class GetLabInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu", Order=0)]
        public string GetLabInfoResult;
        
        public GetLabInfoResponse() {
        }
        
        public GetLabInfoResponse(string GetLabInfoResult) {
            this.GetLabInfoResult = GetLabInfoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLabConfiguration", WrapperNamespace="http://ilab.mit.edu", IsWrapped=true)]
    public partial class GetLabConfigurationRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu")]
        public LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu", Order=0)]
        public string labServerID;
        
        public GetLabConfigurationRequest() {
        }
        
        public GetLabConfigurationRequest(LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader, string labServerID) {
            this.sbAuthHeader = sbAuthHeader;
            this.labServerID = labServerID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLabConfigurationResponse", WrapperNamespace="http://ilab.mit.edu", IsWrapped=true)]
    public partial class GetLabConfigurationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu", Order=0)]
        public string GetLabConfigurationResult;
        
        public GetLabConfigurationResponse() {
        }
        
        public GetLabConfigurationResponse(string GetLabConfigurationResult) {
            this.GetLabConfigurationResult = GetLabConfigurationResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Validate", WrapperNamespace="http://ilab.mit.edu", IsWrapped=true)]
    public partial class ValidateRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu")]
        public LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu", Order=0)]
        public string labServerID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu", Order=1)]
        public string experimentSpecification;
        
        public ValidateRequest() {
        }
        
        public ValidateRequest(LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader, string labServerID, string experimentSpecification) {
            this.sbAuthHeader = sbAuthHeader;
            this.labServerID = labServerID;
            this.experimentSpecification = experimentSpecification;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateResponse", WrapperNamespace="http://ilab.mit.edu", IsWrapped=true)]
    public partial class ValidateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu", Order=0)]
        public LabProxy.iLabSbServiceReference.ValidationReport ValidateResult;
        
        public ValidateResponse() {
        }
        
        public ValidateResponse(LabProxy.iLabSbServiceReference.ValidationReport ValidateResult) {
            this.ValidateResult = ValidateResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Submit", WrapperNamespace="http://ilab.mit.edu", IsWrapped=true)]
    public partial class SubmitRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu")]
        public LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu", Order=0)]
        public string labServerID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu", Order=1)]
        public string experimentSpecification;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu", Order=2)]
        public int priorityHint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu", Order=3)]
        public bool emailNotification;
        
        public SubmitRequest() {
        }
        
        public SubmitRequest(LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader, string labServerID, string experimentSpecification, int priorityHint, bool emailNotification) {
            this.sbAuthHeader = sbAuthHeader;
            this.labServerID = labServerID;
            this.experimentSpecification = experimentSpecification;
            this.priorityHint = priorityHint;
            this.emailNotification = emailNotification;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SubmitResponse", WrapperNamespace="http://ilab.mit.edu", IsWrapped=true)]
    public partial class SubmitResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu", Order=0)]
        public LabProxy.iLabSbServiceReference.ClientSubmissionReport SubmitResult;
        
        public SubmitResponse() {
        }
        
        public SubmitResponse(LabProxy.iLabSbServiceReference.ClientSubmissionReport SubmitResult) {
            this.SubmitResult = SubmitResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetExperimentStatus", WrapperNamespace="http://ilab.mit.edu", IsWrapped=true)]
    public partial class GetExperimentStatusRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu")]
        public LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu", Order=0)]
        public int experimentID;
        
        public GetExperimentStatusRequest() {
        }
        
        public GetExperimentStatusRequest(LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader, int experimentID) {
            this.sbAuthHeader = sbAuthHeader;
            this.experimentID = experimentID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetExperimentStatusResponse", WrapperNamespace="http://ilab.mit.edu", IsWrapped=true)]
    public partial class GetExperimentStatusResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu", Order=0)]
        public LabProxy.iLabSbServiceReference.LabExperimentStatus GetExperimentStatusResult;
        
        public GetExperimentStatusResponse() {
        }
        
        public GetExperimentStatusResponse(LabProxy.iLabSbServiceReference.LabExperimentStatus GetExperimentStatusResult) {
            this.GetExperimentStatusResult = GetExperimentStatusResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Cancel", WrapperNamespace="http://ilab.mit.edu", IsWrapped=true)]
    public partial class CancelRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu")]
        public LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu", Order=0)]
        public int experimentID;
        
        public CancelRequest() {
        }
        
        public CancelRequest(LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader, int experimentID) {
            this.sbAuthHeader = sbAuthHeader;
            this.experimentID = experimentID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CancelResponse", WrapperNamespace="http://ilab.mit.edu", IsWrapped=true)]
    public partial class CancelResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu", Order=0)]
        public bool CancelResult;
        
        public CancelResponse() {
        }
        
        public CancelResponse(bool CancelResult) {
            this.CancelResult = CancelResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RetrieveResult", WrapperNamespace="http://ilab.mit.edu", IsWrapped=true)]
    public partial class RetrieveResultRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu")]
        public LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu", Order=0)]
        public int experimentID;
        
        public RetrieveResultRequest() {
        }
        
        public RetrieveResultRequest(LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader, int experimentID) {
            this.sbAuthHeader = sbAuthHeader;
            this.experimentID = experimentID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RetrieveResultResponse", WrapperNamespace="http://ilab.mit.edu", IsWrapped=true)]
    public partial class RetrieveResultResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu", Order=0)]
        public LabProxy.iLabSbServiceReference.ResultReport RetrieveResultResult;
        
        public RetrieveResultResponse() {
        }
        
        public RetrieveResultResponse(LabProxy.iLabSbServiceReference.ResultReport RetrieveResultResult) {
            this.RetrieveResultResult = RetrieveResultResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Notify", WrapperNamespace="http://ilab.mit.edu", IsWrapped=true)]
    public partial class NotifyRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu")]
        public LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu", Order=0)]
        public int experimentID;
        
        public NotifyRequest() {
        }
        
        public NotifyRequest(LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader, int experimentID) {
            this.sbAuthHeader = sbAuthHeader;
            this.experimentID = experimentID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="NotifyResponse", WrapperNamespace="http://ilab.mit.edu", IsWrapped=true)]
    public partial class NotifyResponse {
        
        public NotifyResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SaveClientItem", WrapperNamespace="http://ilab.mit.edu", IsWrapped=true)]
    public partial class SaveClientItemRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu")]
        public LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu", Order=0)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu", Order=1)]
        public string itemValue;
        
        public SaveClientItemRequest() {
        }
        
        public SaveClientItemRequest(LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader, string name, string itemValue) {
            this.sbAuthHeader = sbAuthHeader;
            this.name = name;
            this.itemValue = itemValue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SaveClientItemResponse", WrapperNamespace="http://ilab.mit.edu", IsWrapped=true)]
    public partial class SaveClientItemResponse {
        
        public SaveClientItemResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadClientItem", WrapperNamespace="http://ilab.mit.edu", IsWrapped=true)]
    public partial class LoadClientItemRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu")]
        public LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu", Order=0)]
        public string name;
        
        public LoadClientItemRequest() {
        }
        
        public LoadClientItemRequest(LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader, string name) {
            this.sbAuthHeader = sbAuthHeader;
            this.name = name;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadClientItemResponse", WrapperNamespace="http://ilab.mit.edu", IsWrapped=true)]
    public partial class LoadClientItemResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu", Order=0)]
        public string LoadClientItemResult;
        
        public LoadClientItemResponse() {
        }
        
        public LoadClientItemResponse(string LoadClientItemResult) {
            this.LoadClientItemResult = LoadClientItemResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteClientItem", WrapperNamespace="http://ilab.mit.edu", IsWrapped=true)]
    public partial class DeleteClientItemRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu")]
        public LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu", Order=0)]
        public string name;
        
        public DeleteClientItemRequest() {
        }
        
        public DeleteClientItemRequest(LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader, string name) {
            this.sbAuthHeader = sbAuthHeader;
            this.name = name;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteClientItemResponse", WrapperNamespace="http://ilab.mit.edu", IsWrapped=true)]
    public partial class DeleteClientItemResponse {
        
        public DeleteClientItemResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListAllClientItems", WrapperNamespace="http://ilab.mit.edu", IsWrapped=true)]
    public partial class ListAllClientItemsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu")]
        public LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader;
        
        public ListAllClientItemsRequest() {
        }
        
        public ListAllClientItemsRequest(LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader) {
            this.sbAuthHeader = sbAuthHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListAllClientItemsResponse", WrapperNamespace="http://ilab.mit.edu", IsWrapped=true)]
    public partial class ListAllClientItemsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu", Order=0)]
        public string[] ListAllClientItemsResult;
        
        public ListAllClientItemsResponse() {
        }
        
        public ListAllClientItemsResponse(string[] ListAllClientItemsResult) {
            this.ListAllClientItemsResult = ListAllClientItemsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RetrieveSpecification", WrapperNamespace="http://ilab.mit.edu", IsWrapped=true)]
    public partial class RetrieveSpecificationRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu")]
        public LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu", Order=0)]
        public int experimentID;
        
        public RetrieveSpecificationRequest() {
        }
        
        public RetrieveSpecificationRequest(LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader, int experimentID) {
            this.sbAuthHeader = sbAuthHeader;
            this.experimentID = experimentID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RetrieveSpecificationResponse", WrapperNamespace="http://ilab.mit.edu", IsWrapped=true)]
    public partial class RetrieveSpecificationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu", Order=0)]
        public string RetrieveSpecificationResult;
        
        public RetrieveSpecificationResponse() {
        }
        
        public RetrieveSpecificationResponse(string RetrieveSpecificationResult) {
            this.RetrieveSpecificationResult = RetrieveSpecificationResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RetrieveLabConfiguration", WrapperNamespace="http://ilab.mit.edu", IsWrapped=true)]
    public partial class RetrieveLabConfigurationRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu")]
        public LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu", Order=0)]
        public int experimentID;
        
        public RetrieveLabConfigurationRequest() {
        }
        
        public RetrieveLabConfigurationRequest(LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader, int experimentID) {
            this.sbAuthHeader = sbAuthHeader;
            this.experimentID = experimentID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RetrieveLabConfigurationResponse", WrapperNamespace="http://ilab.mit.edu", IsWrapped=true)]
    public partial class RetrieveLabConfigurationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu", Order=0)]
        public string RetrieveLabConfigurationResult;
        
        public RetrieveLabConfigurationResponse() {
        }
        
        public RetrieveLabConfigurationResponse(string RetrieveLabConfigurationResult) {
            this.RetrieveLabConfigurationResult = RetrieveLabConfigurationResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SaveAnnotation", WrapperNamespace="http://ilab.mit.edu", IsWrapped=true)]
    public partial class SaveAnnotationRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu")]
        public LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu", Order=0)]
        public int experimentID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu", Order=1)]
        public string annotation;
        
        public SaveAnnotationRequest() {
        }
        
        public SaveAnnotationRequest(LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader, int experimentID, string annotation) {
            this.sbAuthHeader = sbAuthHeader;
            this.experimentID = experimentID;
            this.annotation = annotation;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SaveAnnotationResponse", WrapperNamespace="http://ilab.mit.edu", IsWrapped=true)]
    public partial class SaveAnnotationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu", Order=0)]
        public string SaveAnnotationResult;
        
        public SaveAnnotationResponse() {
        }
        
        public SaveAnnotationResponse(string SaveAnnotationResult) {
            this.SaveAnnotationResult = SaveAnnotationResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RetrieveAnnotation", WrapperNamespace="http://ilab.mit.edu", IsWrapped=true)]
    public partial class RetrieveAnnotationRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu")]
        public LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu", Order=0)]
        public int experimentID;
        
        public RetrieveAnnotationRequest() {
        }
        
        public RetrieveAnnotationRequest(LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader, int experimentID) {
            this.sbAuthHeader = sbAuthHeader;
            this.experimentID = experimentID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RetrieveAnnotationResponse", WrapperNamespace="http://ilab.mit.edu", IsWrapped=true)]
    public partial class RetrieveAnnotationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu", Order=0)]
        public string RetrieveAnnotationResult;
        
        public RetrieveAnnotationResponse() {
        }
        
        public RetrieveAnnotationResponse(string RetrieveAnnotationResult) {
            this.RetrieveAnnotationResult = RetrieveAnnotationResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetExperimentInformation", WrapperNamespace="http://ilab.mit.edu", IsWrapped=true)]
    public partial class GetExperimentInformationRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu")]
        public LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu", Order=0)]
        public int[] experimentIDs;
        
        public GetExperimentInformationRequest() {
        }
        
        public GetExperimentInformationRequest(LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader, int[] experimentIDs) {
            this.sbAuthHeader = sbAuthHeader;
            this.experimentIDs = experimentIDs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetExperimentInformationResponse", WrapperNamespace="http://ilab.mit.edu", IsWrapped=true)]
    public partial class GetExperimentInformationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu", Order=0)]
        public ExperimentInformation[] GetExperimentInformationResult;
        
        public GetExperimentInformationResponse() {
        }
        
        public GetExperimentInformationResponse(ExperimentInformation[] GetExperimentInformationResult) {
            this.GetExperimentInformationResult = GetExperimentInformationResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IBatchSBChannel : LabProxy.iLabSbServiceReference.IBatchSB, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class BatchSBClient : System.ServiceModel.ClientBase<LabProxy.iLabSbServiceReference.IBatchSB>, LabProxy.iLabSbServiceReference.IBatchSB {
        
        public BatchSBClient() {
        }
        
        public BatchSBClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BatchSBClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BatchSBClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BatchSBClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.GetLabStatusResponse LabProxy.iLabSbServiceReference.IBatchSB.GetLabStatus(LabProxy.iLabSbServiceReference.GetLabStatusRequest request) {
            return base.Channel.GetLabStatus(request);
        }
        
        public LabProxy.iLabSbServiceReference.LabStatus GetLabStatus(LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader, string labServerID) {
            LabProxy.iLabSbServiceReference.GetLabStatusRequest inValue = new LabProxy.iLabSbServiceReference.GetLabStatusRequest();
            inValue.sbAuthHeader = sbAuthHeader;
            inValue.labServerID = labServerID;
            LabProxy.iLabSbServiceReference.GetLabStatusResponse retVal = ((LabProxy.iLabSbServiceReference.IBatchSB)(this)).GetLabStatus(inValue);
            return retVal.GetLabStatusResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.GetEffectiveQueueLengthResponse LabProxy.iLabSbServiceReference.IBatchSB.GetEffectiveQueueLength(LabProxy.iLabSbServiceReference.GetEffectiveQueueLengthRequest request) {
            return base.Channel.GetEffectiveQueueLength(request);
        }
        
        public LabProxy.iLabSbServiceReference.WaitEstimate GetEffectiveQueueLength(LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader, string labServerID, int priorityHint) {
            LabProxy.iLabSbServiceReference.GetEffectiveQueueLengthRequest inValue = new LabProxy.iLabSbServiceReference.GetEffectiveQueueLengthRequest();
            inValue.sbAuthHeader = sbAuthHeader;
            inValue.labServerID = labServerID;
            inValue.priorityHint = priorityHint;
            LabProxy.iLabSbServiceReference.GetEffectiveQueueLengthResponse retVal = ((LabProxy.iLabSbServiceReference.IBatchSB)(this)).GetEffectiveQueueLength(inValue);
            return retVal.GetEffectiveQueueLengthResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.GetLabInfoResponse LabProxy.iLabSbServiceReference.IBatchSB.GetLabInfo(LabProxy.iLabSbServiceReference.GetLabInfoRequest request) {
            return base.Channel.GetLabInfo(request);
        }
        
        public string GetLabInfo(LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader, string labServerID) {
            LabProxy.iLabSbServiceReference.GetLabInfoRequest inValue = new LabProxy.iLabSbServiceReference.GetLabInfoRequest();
            inValue.sbAuthHeader = sbAuthHeader;
            inValue.labServerID = labServerID;
            LabProxy.iLabSbServiceReference.GetLabInfoResponse retVal = ((LabProxy.iLabSbServiceReference.IBatchSB)(this)).GetLabInfo(inValue);
            return retVal.GetLabInfoResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.GetLabConfigurationResponse LabProxy.iLabSbServiceReference.IBatchSB.GetLabConfiguration(LabProxy.iLabSbServiceReference.GetLabConfigurationRequest request) {
            return base.Channel.GetLabConfiguration(request);
        }
        
        public string GetLabConfiguration(LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader, string labServerID) {
            LabProxy.iLabSbServiceReference.GetLabConfigurationRequest inValue = new LabProxy.iLabSbServiceReference.GetLabConfigurationRequest();
            inValue.sbAuthHeader = sbAuthHeader;
            inValue.labServerID = labServerID;
            LabProxy.iLabSbServiceReference.GetLabConfigurationResponse retVal = ((LabProxy.iLabSbServiceReference.IBatchSB)(this)).GetLabConfiguration(inValue);
            return retVal.GetLabConfigurationResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.ValidateResponse LabProxy.iLabSbServiceReference.IBatchSB.Validate(LabProxy.iLabSbServiceReference.ValidateRequest request) {
            return base.Channel.Validate(request);
        }
        
        public LabProxy.iLabSbServiceReference.ValidationReport Validate(LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader, string labServerID, string experimentSpecification) {
            LabProxy.iLabSbServiceReference.ValidateRequest inValue = new LabProxy.iLabSbServiceReference.ValidateRequest();
            inValue.sbAuthHeader = sbAuthHeader;
            inValue.labServerID = labServerID;
            inValue.experimentSpecification = experimentSpecification;
            LabProxy.iLabSbServiceReference.ValidateResponse retVal = ((LabProxy.iLabSbServiceReference.IBatchSB)(this)).Validate(inValue);
            return retVal.ValidateResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.SubmitResponse LabProxy.iLabSbServiceReference.IBatchSB.Submit(LabProxy.iLabSbServiceReference.SubmitRequest request) {
            return base.Channel.Submit(request);
        }
        
        public LabProxy.iLabSbServiceReference.ClientSubmissionReport Submit(LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader, string labServerID, string experimentSpecification, int priorityHint, bool emailNotification) {
            LabProxy.iLabSbServiceReference.SubmitRequest inValue = new LabProxy.iLabSbServiceReference.SubmitRequest();
            inValue.sbAuthHeader = sbAuthHeader;
            inValue.labServerID = labServerID;
            inValue.experimentSpecification = experimentSpecification;
            inValue.priorityHint = priorityHint;
            inValue.emailNotification = emailNotification;
            LabProxy.iLabSbServiceReference.SubmitResponse retVal = ((LabProxy.iLabSbServiceReference.IBatchSB)(this)).Submit(inValue);
            return retVal.SubmitResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.GetExperimentStatusResponse LabProxy.iLabSbServiceReference.IBatchSB.GetExperimentStatus(LabProxy.iLabSbServiceReference.GetExperimentStatusRequest request) {
            return base.Channel.GetExperimentStatus(request);
        }
        
        public LabProxy.iLabSbServiceReference.LabExperimentStatus GetExperimentStatus(LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader, int experimentID) {
            LabProxy.iLabSbServiceReference.GetExperimentStatusRequest inValue = new LabProxy.iLabSbServiceReference.GetExperimentStatusRequest();
            inValue.sbAuthHeader = sbAuthHeader;
            inValue.experimentID = experimentID;
            LabProxy.iLabSbServiceReference.GetExperimentStatusResponse retVal = ((LabProxy.iLabSbServiceReference.IBatchSB)(this)).GetExperimentStatus(inValue);
            return retVal.GetExperimentStatusResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.CancelResponse LabProxy.iLabSbServiceReference.IBatchSB.Cancel(LabProxy.iLabSbServiceReference.CancelRequest request) {
            return base.Channel.Cancel(request);
        }
        
        public bool Cancel(LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader, int experimentID) {
            LabProxy.iLabSbServiceReference.CancelRequest inValue = new LabProxy.iLabSbServiceReference.CancelRequest();
            inValue.sbAuthHeader = sbAuthHeader;
            inValue.experimentID = experimentID;
            LabProxy.iLabSbServiceReference.CancelResponse retVal = ((LabProxy.iLabSbServiceReference.IBatchSB)(this)).Cancel(inValue);
            return retVal.CancelResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.RetrieveResultResponse LabProxy.iLabSbServiceReference.IBatchSB.RetrieveResult(LabProxy.iLabSbServiceReference.RetrieveResultRequest request) {
            return base.Channel.RetrieveResult(request);
        }
        
        public LabProxy.iLabSbServiceReference.ResultReport RetrieveResult(LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader, int experimentID) {
            LabProxy.iLabSbServiceReference.RetrieveResultRequest inValue = new LabProxy.iLabSbServiceReference.RetrieveResultRequest();
            inValue.sbAuthHeader = sbAuthHeader;
            inValue.experimentID = experimentID;
            LabProxy.iLabSbServiceReference.RetrieveResultResponse retVal = ((LabProxy.iLabSbServiceReference.IBatchSB)(this)).RetrieveResult(inValue);
            return retVal.RetrieveResultResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.NotifyResponse LabProxy.iLabSbServiceReference.IBatchSB.Notify(LabProxy.iLabSbServiceReference.NotifyRequest request) {
            return base.Channel.Notify(request);
        }
        
        public void Notify(LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader, int experimentID) {
            LabProxy.iLabSbServiceReference.NotifyRequest inValue = new LabProxy.iLabSbServiceReference.NotifyRequest();
            inValue.sbAuthHeader = sbAuthHeader;
            inValue.experimentID = experimentID;
            LabProxy.iLabSbServiceReference.NotifyResponse retVal = ((LabProxy.iLabSbServiceReference.IBatchSB)(this)).Notify(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.SaveClientItemResponse LabProxy.iLabSbServiceReference.IBatchSB.SaveClientItem(LabProxy.iLabSbServiceReference.SaveClientItemRequest request) {
            return base.Channel.SaveClientItem(request);
        }
        
        public void SaveClientItem(LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader, string name, string itemValue) {
            LabProxy.iLabSbServiceReference.SaveClientItemRequest inValue = new LabProxy.iLabSbServiceReference.SaveClientItemRequest();
            inValue.sbAuthHeader = sbAuthHeader;
            inValue.name = name;
            inValue.itemValue = itemValue;
            LabProxy.iLabSbServiceReference.SaveClientItemResponse retVal = ((LabProxy.iLabSbServiceReference.IBatchSB)(this)).SaveClientItem(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.LoadClientItemResponse LabProxy.iLabSbServiceReference.IBatchSB.LoadClientItem(LabProxy.iLabSbServiceReference.LoadClientItemRequest request) {
            return base.Channel.LoadClientItem(request);
        }
        
        public string LoadClientItem(LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader, string name) {
            LabProxy.iLabSbServiceReference.LoadClientItemRequest inValue = new LabProxy.iLabSbServiceReference.LoadClientItemRequest();
            inValue.sbAuthHeader = sbAuthHeader;
            inValue.name = name;
            LabProxy.iLabSbServiceReference.LoadClientItemResponse retVal = ((LabProxy.iLabSbServiceReference.IBatchSB)(this)).LoadClientItem(inValue);
            return retVal.LoadClientItemResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.DeleteClientItemResponse LabProxy.iLabSbServiceReference.IBatchSB.DeleteClientItem(LabProxy.iLabSbServiceReference.DeleteClientItemRequest request) {
            return base.Channel.DeleteClientItem(request);
        }
        
        public void DeleteClientItem(LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader, string name) {
            LabProxy.iLabSbServiceReference.DeleteClientItemRequest inValue = new LabProxy.iLabSbServiceReference.DeleteClientItemRequest();
            inValue.sbAuthHeader = sbAuthHeader;
            inValue.name = name;
            LabProxy.iLabSbServiceReference.DeleteClientItemResponse retVal = ((LabProxy.iLabSbServiceReference.IBatchSB)(this)).DeleteClientItem(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.ListAllClientItemsResponse LabProxy.iLabSbServiceReference.IBatchSB.ListAllClientItems(LabProxy.iLabSbServiceReference.ListAllClientItemsRequest request) {
            return base.Channel.ListAllClientItems(request);
        }
        
        public string[] ListAllClientItems(LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader) {
            LabProxy.iLabSbServiceReference.ListAllClientItemsRequest inValue = new LabProxy.iLabSbServiceReference.ListAllClientItemsRequest();
            inValue.sbAuthHeader = sbAuthHeader;
            LabProxy.iLabSbServiceReference.ListAllClientItemsResponse retVal = ((LabProxy.iLabSbServiceReference.IBatchSB)(this)).ListAllClientItems(inValue);
            return retVal.ListAllClientItemsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.RetrieveSpecificationResponse LabProxy.iLabSbServiceReference.IBatchSB.RetrieveSpecification(LabProxy.iLabSbServiceReference.RetrieveSpecificationRequest request) {
            return base.Channel.RetrieveSpecification(request);
        }
        
        public string RetrieveSpecification(LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader, int experimentID) {
            LabProxy.iLabSbServiceReference.RetrieveSpecificationRequest inValue = new LabProxy.iLabSbServiceReference.RetrieveSpecificationRequest();
            inValue.sbAuthHeader = sbAuthHeader;
            inValue.experimentID = experimentID;
            LabProxy.iLabSbServiceReference.RetrieveSpecificationResponse retVal = ((LabProxy.iLabSbServiceReference.IBatchSB)(this)).RetrieveSpecification(inValue);
            return retVal.RetrieveSpecificationResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.RetrieveLabConfigurationResponse LabProxy.iLabSbServiceReference.IBatchSB.RetrieveLabConfiguration(LabProxy.iLabSbServiceReference.RetrieveLabConfigurationRequest request) {
            return base.Channel.RetrieveLabConfiguration(request);
        }
        
        public string RetrieveLabConfiguration(LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader, int experimentID) {
            LabProxy.iLabSbServiceReference.RetrieveLabConfigurationRequest inValue = new LabProxy.iLabSbServiceReference.RetrieveLabConfigurationRequest();
            inValue.sbAuthHeader = sbAuthHeader;
            inValue.experimentID = experimentID;
            LabProxy.iLabSbServiceReference.RetrieveLabConfigurationResponse retVal = ((LabProxy.iLabSbServiceReference.IBatchSB)(this)).RetrieveLabConfiguration(inValue);
            return retVal.RetrieveLabConfigurationResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.SaveAnnotationResponse LabProxy.iLabSbServiceReference.IBatchSB.SaveAnnotation(LabProxy.iLabSbServiceReference.SaveAnnotationRequest request) {
            return base.Channel.SaveAnnotation(request);
        }
        
        public string SaveAnnotation(LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader, int experimentID, string annotation) {
            LabProxy.iLabSbServiceReference.SaveAnnotationRequest inValue = new LabProxy.iLabSbServiceReference.SaveAnnotationRequest();
            inValue.sbAuthHeader = sbAuthHeader;
            inValue.experimentID = experimentID;
            inValue.annotation = annotation;
            LabProxy.iLabSbServiceReference.SaveAnnotationResponse retVal = ((LabProxy.iLabSbServiceReference.IBatchSB)(this)).SaveAnnotation(inValue);
            return retVal.SaveAnnotationResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.RetrieveAnnotationResponse LabProxy.iLabSbServiceReference.IBatchSB.RetrieveAnnotation(LabProxy.iLabSbServiceReference.RetrieveAnnotationRequest request) {
            return base.Channel.RetrieveAnnotation(request);
        }
        
        public string RetrieveAnnotation(LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader, int experimentID) {
            LabProxy.iLabSbServiceReference.RetrieveAnnotationRequest inValue = new LabProxy.iLabSbServiceReference.RetrieveAnnotationRequest();
            inValue.sbAuthHeader = sbAuthHeader;
            inValue.experimentID = experimentID;
            LabProxy.iLabSbServiceReference.RetrieveAnnotationResponse retVal = ((LabProxy.iLabSbServiceReference.IBatchSB)(this)).RetrieveAnnotation(inValue);
            return retVal.RetrieveAnnotationResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.GetExperimentInformationResponse LabProxy.iLabSbServiceReference.IBatchSB.GetExperimentInformation(LabProxy.iLabSbServiceReference.GetExperimentInformationRequest request) {
            return base.Channel.GetExperimentInformation(request);
        }
        
        public ExperimentInformation[] GetExperimentInformation(LabProxy.iLabSbServiceReference.sbAuthHeader sbAuthHeader, int[] experimentIDs) {
            LabProxy.iLabSbServiceReference.GetExperimentInformationRequest inValue = new LabProxy.iLabSbServiceReference.GetExperimentInformationRequest();
            inValue.sbAuthHeader = sbAuthHeader;
            inValue.experimentIDs = experimentIDs;
            LabProxy.iLabSbServiceReference.GetExperimentInformationResponse retVal = ((LabProxy.iLabSbServiceReference.IBatchSB)(this)).GetExperimentInformation(inValue);
            return retVal.GetExperimentInformationResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", ConfigurationName="iLabSbServiceReference.IProcessAgent")]
    public interface IProcessAgent {
        
        // CODEGEN: Generating message contract since message ModifyDomainCredentialsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/iLabs/Services/ModifyDomainCredentials", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.ModifyDomainCredentialsResponse ModifyDomainCredentials(LabProxy.iLabSbServiceReference.ModifyDomainCredentialsRequest request);
        
        // CODEGEN: Generating message contract since message ModifyProcessAgentRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/iLabs/Services/ModifyProcessAgent", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.ModifyProcessAgentResponse ModifyProcessAgent(LabProxy.iLabSbServiceReference.ModifyProcessAgentRequest request);
        
        // CODEGEN: Generating message contract since message RetireProcessAgentRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/iLabs/Services/RetireProcessAgent", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.RetireProcessAgentResponse RetireProcessAgent(LabProxy.iLabSbServiceReference.RetireProcessAgentRequest request);
        
        // CODEGEN: Generating message contract since message CancelTicketRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/iLabs/Services/CancelTicket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.CancelTicketResponse CancelTicket(LabProxy.iLabSbServiceReference.CancelTicketRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/iLabs/Services/GetServiceTime", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        System.DateTime GetServiceTime();
        
        // CODEGEN: Generating message contract since message part namespace (http://ilab.mit.edu/iLabs/type) does not match the default value (http://ilab.mit.edu/iLabs/Services)
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/iLabs/Services/GetStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.GetStatusResponse GetStatus(LabProxy.iLabSbServiceReference.GetStatusRequest request);
        
        // CODEGEN: Generating message contract since message StatusNotificationRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/iLabs/Services/StatusNotification", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.StatusNotificationResponse StatusNotification(LabProxy.iLabSbServiceReference.StatusNotificationRequest request);
        
        // CODEGEN: Generating message contract since message InstallDomainCredentialsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/iLabs/Services/InstallDomainCredentials", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.InstallDomainCredentialsResponse InstallDomainCredentials(LabProxy.iLabSbServiceReference.InstallDomainCredentialsRequest request);
        
        // CODEGEN: Generating message contract since message RemoveDomainCredentialsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/iLabs/Services/RemoveDomainCredentials", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.RemoveDomainCredentialsResponse RemoveDomainCredentials(LabProxy.iLabSbServiceReference.RemoveDomainCredentialsRequest request);
        
        // CODEGEN: Generating message contract since message RegisterRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/iLabs/Services/Register", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.RegisterResponse Register(LabProxy.iLabSbServiceReference.RegisterRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ModifyDomainCredentials", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class ModifyDomainCredentialsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu/iLabs/type")]
        public LabProxy.iLabSbServiceReference.AgentAuthHeader AgentAuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=0)]
        public string originalGuid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/type", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public LabProxy.iLabSbServiceReference.ProcessAgent agent;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=2)]
        public string extra;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/type", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public LabProxy.iLabSbServiceReference.Coupon inCoupon;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/type", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public LabProxy.iLabSbServiceReference.Coupon outCoupon;
        
        public ModifyDomainCredentialsRequest() {
        }
        
        public ModifyDomainCredentialsRequest(LabProxy.iLabSbServiceReference.AgentAuthHeader AgentAuthHeader, string originalGuid, LabProxy.iLabSbServiceReference.ProcessAgent agent, string extra, LabProxy.iLabSbServiceReference.Coupon inCoupon, LabProxy.iLabSbServiceReference.Coupon outCoupon) {
            this.AgentAuthHeader = AgentAuthHeader;
            this.originalGuid = originalGuid;
            this.agent = agent;
            this.extra = extra;
            this.inCoupon = inCoupon;
            this.outCoupon = outCoupon;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ModifyDomainCredentialsResponse", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class ModifyDomainCredentialsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=0)]
        public int ModifyDomainCredentialsResult;
        
        public ModifyDomainCredentialsResponse() {
        }
        
        public ModifyDomainCredentialsResponse(int ModifyDomainCredentialsResult) {
            this.ModifyDomainCredentialsResult = ModifyDomainCredentialsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ModifyProcessAgent", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class ModifyProcessAgentRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu/iLabs/type")]
        public LabProxy.iLabSbServiceReference.AgentAuthHeader AgentAuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=0)]
        public string originalGuid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/type", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public LabProxy.iLabSbServiceReference.ProcessAgent agent;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=2)]
        public string extra;
        
        public ModifyProcessAgentRequest() {
        }
        
        public ModifyProcessAgentRequest(LabProxy.iLabSbServiceReference.AgentAuthHeader AgentAuthHeader, string originalGuid, LabProxy.iLabSbServiceReference.ProcessAgent agent, string extra) {
            this.AgentAuthHeader = AgentAuthHeader;
            this.originalGuid = originalGuid;
            this.agent = agent;
            this.extra = extra;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ModifyProcessAgentResponse", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class ModifyProcessAgentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=0)]
        public int ModifyProcessAgentResult;
        
        public ModifyProcessAgentResponse() {
        }
        
        public ModifyProcessAgentResponse(int ModifyProcessAgentResult) {
            this.ModifyProcessAgentResult = ModifyProcessAgentResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RetireProcessAgent", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class RetireProcessAgentRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu/iLabs/type")]
        public LabProxy.iLabSbServiceReference.AgentAuthHeader AgentAuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=0)]
        public string domainGuid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=1)]
        public string serviceGuid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=2)]
        public bool state;
        
        public RetireProcessAgentRequest() {
        }
        
        public RetireProcessAgentRequest(LabProxy.iLabSbServiceReference.AgentAuthHeader AgentAuthHeader, string domainGuid, string serviceGuid, bool state) {
            this.AgentAuthHeader = AgentAuthHeader;
            this.domainGuid = domainGuid;
            this.serviceGuid = serviceGuid;
            this.state = state;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RetireProcessAgentResponse", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class RetireProcessAgentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=0)]
        public int RetireProcessAgentResult;
        
        public RetireProcessAgentResponse() {
        }
        
        public RetireProcessAgentResponse(int RetireProcessAgentResult) {
            this.RetireProcessAgentResult = RetireProcessAgentResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CancelTicket", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class CancelTicketRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu/iLabs/type")]
        public LabProxy.iLabSbServiceReference.AgentAuthHeader AgentAuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/type", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public LabProxy.iLabSbServiceReference.Coupon coupon;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=1)]
        public string type;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=2)]
        public string redeemer;
        
        public CancelTicketRequest() {
        }
        
        public CancelTicketRequest(LabProxy.iLabSbServiceReference.AgentAuthHeader AgentAuthHeader, LabProxy.iLabSbServiceReference.Coupon coupon, string type, string redeemer) {
            this.AgentAuthHeader = AgentAuthHeader;
            this.coupon = coupon;
            this.type = type;
            this.redeemer = redeemer;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CancelTicketResponse", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class CancelTicketResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=0)]
        public bool CancelTicketResult;
        
        public CancelTicketResponse() {
        }
        
        public CancelTicketResponse(bool CancelTicketResult) {
            this.CancelTicketResult = CancelTicketResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStatus", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class GetStatusRequest {
        
        public GetStatusRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStatusResponse", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class GetStatusResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/type", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public LabProxy.iLabSbServiceReference.StatusReport GetStatusResult;
        
        public GetStatusResponse() {
        }
        
        public GetStatusResponse(LabProxy.iLabSbServiceReference.StatusReport GetStatusResult) {
            this.GetStatusResult = GetStatusResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StatusNotification", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class StatusNotificationRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu/iLabs/type")]
        public LabProxy.iLabSbServiceReference.AgentAuthHeader AgentAuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/type", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public LabProxy.iLabSbServiceReference.StatusNotificationReport report;
        
        public StatusNotificationRequest() {
        }
        
        public StatusNotificationRequest(LabProxy.iLabSbServiceReference.AgentAuthHeader AgentAuthHeader, LabProxy.iLabSbServiceReference.StatusNotificationReport report) {
            this.AgentAuthHeader = AgentAuthHeader;
            this.report = report;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StatusNotificationResponse", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class StatusNotificationResponse {
        
        public StatusNotificationResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InstallDomainCredentials", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class InstallDomainCredentialsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu/iLabs/type")]
        public LabProxy.iLabSbServiceReference.InitAuthHeader InitAuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/type", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public LabProxy.iLabSbServiceReference.ProcessAgent service;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/type", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public LabProxy.iLabSbServiceReference.Coupon inIdentCoupon;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/type", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public LabProxy.iLabSbServiceReference.Coupon outIdentCoupon;
        
        public InstallDomainCredentialsRequest() {
        }
        
        public InstallDomainCredentialsRequest(LabProxy.iLabSbServiceReference.InitAuthHeader InitAuthHeader, LabProxy.iLabSbServiceReference.ProcessAgent service, LabProxy.iLabSbServiceReference.Coupon inIdentCoupon, LabProxy.iLabSbServiceReference.Coupon outIdentCoupon) {
            this.InitAuthHeader = InitAuthHeader;
            this.service = service;
            this.inIdentCoupon = inIdentCoupon;
            this.outIdentCoupon = outIdentCoupon;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InstallDomainCredentialsResponse", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class InstallDomainCredentialsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/type", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public LabProxy.iLabSbServiceReference.ProcessAgent InstallDomainCredentialsResult;
        
        public InstallDomainCredentialsResponse() {
        }
        
        public InstallDomainCredentialsResponse(LabProxy.iLabSbServiceReference.ProcessAgent InstallDomainCredentialsResult) {
            this.InstallDomainCredentialsResult = InstallDomainCredentialsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveDomainCredentials", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class RemoveDomainCredentialsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu/iLabs/type")]
        public LabProxy.iLabSbServiceReference.AgentAuthHeader AgentAuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=0)]
        public string domainGuid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=1)]
        public string serviceGuid;
        
        public RemoveDomainCredentialsRequest() {
        }
        
        public RemoveDomainCredentialsRequest(LabProxy.iLabSbServiceReference.AgentAuthHeader AgentAuthHeader, string domainGuid, string serviceGuid) {
            this.AgentAuthHeader = AgentAuthHeader;
            this.domainGuid = domainGuid;
            this.serviceGuid = serviceGuid;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveDomainCredentialsResponse", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class RemoveDomainCredentialsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=0)]
        public int RemoveDomainCredentialsResult;
        
        public RemoveDomainCredentialsResponse() {
        }
        
        public RemoveDomainCredentialsResponse(int RemoveDomainCredentialsResult) {
            this.RemoveDomainCredentialsResult = RemoveDomainCredentialsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Register", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class RegisterRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu/iLabs/type")]
        public LabProxy.iLabSbServiceReference.AgentAuthHeader AgentAuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=0)]
        public string registerGuid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=1)]
        public ServiceDescription[] info;
        
        public RegisterRequest() {
        }
        
        public RegisterRequest(LabProxy.iLabSbServiceReference.AgentAuthHeader AgentAuthHeader, string registerGuid, ServiceDescription[] info) {
            this.AgentAuthHeader = AgentAuthHeader;
            this.registerGuid = registerGuid;
            this.info = info;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RegisterResponse", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class RegisterResponse {
        
        public RegisterResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IProcessAgentChannel : LabProxy.iLabSbServiceReference.IProcessAgent, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ProcessAgentClient : System.ServiceModel.ClientBase<LabProxy.iLabSbServiceReference.IProcessAgent>, LabProxy.iLabSbServiceReference.IProcessAgent {
        
        public ProcessAgentClient() {
        }
        
        public ProcessAgentClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProcessAgentClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProcessAgentClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProcessAgentClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.ModifyDomainCredentialsResponse LabProxy.iLabSbServiceReference.IProcessAgent.ModifyDomainCredentials(LabProxy.iLabSbServiceReference.ModifyDomainCredentialsRequest request) {
            return base.Channel.ModifyDomainCredentials(request);
        }
        
        public int ModifyDomainCredentials(LabProxy.iLabSbServiceReference.AgentAuthHeader AgentAuthHeader, string originalGuid, LabProxy.iLabSbServiceReference.ProcessAgent agent, string extra, LabProxy.iLabSbServiceReference.Coupon inCoupon, LabProxy.iLabSbServiceReference.Coupon outCoupon) {
            LabProxy.iLabSbServiceReference.ModifyDomainCredentialsRequest inValue = new LabProxy.iLabSbServiceReference.ModifyDomainCredentialsRequest();
            inValue.AgentAuthHeader = AgentAuthHeader;
            inValue.originalGuid = originalGuid;
            inValue.agent = agent;
            inValue.extra = extra;
            inValue.inCoupon = inCoupon;
            inValue.outCoupon = outCoupon;
            LabProxy.iLabSbServiceReference.ModifyDomainCredentialsResponse retVal = ((LabProxy.iLabSbServiceReference.IProcessAgent)(this)).ModifyDomainCredentials(inValue);
            return retVal.ModifyDomainCredentialsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.ModifyProcessAgentResponse LabProxy.iLabSbServiceReference.IProcessAgent.ModifyProcessAgent(LabProxy.iLabSbServiceReference.ModifyProcessAgentRequest request) {
            return base.Channel.ModifyProcessAgent(request);
        }
        
        public int ModifyProcessAgent(LabProxy.iLabSbServiceReference.AgentAuthHeader AgentAuthHeader, string originalGuid, LabProxy.iLabSbServiceReference.ProcessAgent agent, string extra) {
            LabProxy.iLabSbServiceReference.ModifyProcessAgentRequest inValue = new LabProxy.iLabSbServiceReference.ModifyProcessAgentRequest();
            inValue.AgentAuthHeader = AgentAuthHeader;
            inValue.originalGuid = originalGuid;
            inValue.agent = agent;
            inValue.extra = extra;
            LabProxy.iLabSbServiceReference.ModifyProcessAgentResponse retVal = ((LabProxy.iLabSbServiceReference.IProcessAgent)(this)).ModifyProcessAgent(inValue);
            return retVal.ModifyProcessAgentResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.RetireProcessAgentResponse LabProxy.iLabSbServiceReference.IProcessAgent.RetireProcessAgent(LabProxy.iLabSbServiceReference.RetireProcessAgentRequest request) {
            return base.Channel.RetireProcessAgent(request);
        }
        
        public int RetireProcessAgent(LabProxy.iLabSbServiceReference.AgentAuthHeader AgentAuthHeader, string domainGuid, string serviceGuid, bool state) {
            LabProxy.iLabSbServiceReference.RetireProcessAgentRequest inValue = new LabProxy.iLabSbServiceReference.RetireProcessAgentRequest();
            inValue.AgentAuthHeader = AgentAuthHeader;
            inValue.domainGuid = domainGuid;
            inValue.serviceGuid = serviceGuid;
            inValue.state = state;
            LabProxy.iLabSbServiceReference.RetireProcessAgentResponse retVal = ((LabProxy.iLabSbServiceReference.IProcessAgent)(this)).RetireProcessAgent(inValue);
            return retVal.RetireProcessAgentResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.CancelTicketResponse LabProxy.iLabSbServiceReference.IProcessAgent.CancelTicket(LabProxy.iLabSbServiceReference.CancelTicketRequest request) {
            return base.Channel.CancelTicket(request);
        }
        
        public bool CancelTicket(LabProxy.iLabSbServiceReference.AgentAuthHeader AgentAuthHeader, LabProxy.iLabSbServiceReference.Coupon coupon, string type, string redeemer) {
            LabProxy.iLabSbServiceReference.CancelTicketRequest inValue = new LabProxy.iLabSbServiceReference.CancelTicketRequest();
            inValue.AgentAuthHeader = AgentAuthHeader;
            inValue.coupon = coupon;
            inValue.type = type;
            inValue.redeemer = redeemer;
            LabProxy.iLabSbServiceReference.CancelTicketResponse retVal = ((LabProxy.iLabSbServiceReference.IProcessAgent)(this)).CancelTicket(inValue);
            return retVal.CancelTicketResult;
        }
        
        public System.DateTime GetServiceTime() {
            return base.Channel.GetServiceTime();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.GetStatusResponse LabProxy.iLabSbServiceReference.IProcessAgent.GetStatus(LabProxy.iLabSbServiceReference.GetStatusRequest request) {
            return base.Channel.GetStatus(request);
        }
        
        public LabProxy.iLabSbServiceReference.StatusReport GetStatus() {
            LabProxy.iLabSbServiceReference.GetStatusRequest inValue = new LabProxy.iLabSbServiceReference.GetStatusRequest();
            LabProxy.iLabSbServiceReference.GetStatusResponse retVal = ((LabProxy.iLabSbServiceReference.IProcessAgent)(this)).GetStatus(inValue);
            return retVal.GetStatusResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.StatusNotificationResponse LabProxy.iLabSbServiceReference.IProcessAgent.StatusNotification(LabProxy.iLabSbServiceReference.StatusNotificationRequest request) {
            return base.Channel.StatusNotification(request);
        }
        
        public void StatusNotification(LabProxy.iLabSbServiceReference.AgentAuthHeader AgentAuthHeader, LabProxy.iLabSbServiceReference.StatusNotificationReport report) {
            LabProxy.iLabSbServiceReference.StatusNotificationRequest inValue = new LabProxy.iLabSbServiceReference.StatusNotificationRequest();
            inValue.AgentAuthHeader = AgentAuthHeader;
            inValue.report = report;
            LabProxy.iLabSbServiceReference.StatusNotificationResponse retVal = ((LabProxy.iLabSbServiceReference.IProcessAgent)(this)).StatusNotification(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.InstallDomainCredentialsResponse LabProxy.iLabSbServiceReference.IProcessAgent.InstallDomainCredentials(LabProxy.iLabSbServiceReference.InstallDomainCredentialsRequest request) {
            return base.Channel.InstallDomainCredentials(request);
        }
        
        public LabProxy.iLabSbServiceReference.ProcessAgent InstallDomainCredentials(LabProxy.iLabSbServiceReference.InitAuthHeader InitAuthHeader, LabProxy.iLabSbServiceReference.ProcessAgent service, LabProxy.iLabSbServiceReference.Coupon inIdentCoupon, LabProxy.iLabSbServiceReference.Coupon outIdentCoupon) {
            LabProxy.iLabSbServiceReference.InstallDomainCredentialsRequest inValue = new LabProxy.iLabSbServiceReference.InstallDomainCredentialsRequest();
            inValue.InitAuthHeader = InitAuthHeader;
            inValue.service = service;
            inValue.inIdentCoupon = inIdentCoupon;
            inValue.outIdentCoupon = outIdentCoupon;
            LabProxy.iLabSbServiceReference.InstallDomainCredentialsResponse retVal = ((LabProxy.iLabSbServiceReference.IProcessAgent)(this)).InstallDomainCredentials(inValue);
            return retVal.InstallDomainCredentialsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.RemoveDomainCredentialsResponse LabProxy.iLabSbServiceReference.IProcessAgent.RemoveDomainCredentials(LabProxy.iLabSbServiceReference.RemoveDomainCredentialsRequest request) {
            return base.Channel.RemoveDomainCredentials(request);
        }
        
        public int RemoveDomainCredentials(LabProxy.iLabSbServiceReference.AgentAuthHeader AgentAuthHeader, string domainGuid, string serviceGuid) {
            LabProxy.iLabSbServiceReference.RemoveDomainCredentialsRequest inValue = new LabProxy.iLabSbServiceReference.RemoveDomainCredentialsRequest();
            inValue.AgentAuthHeader = AgentAuthHeader;
            inValue.domainGuid = domainGuid;
            inValue.serviceGuid = serviceGuid;
            LabProxy.iLabSbServiceReference.RemoveDomainCredentialsResponse retVal = ((LabProxy.iLabSbServiceReference.IProcessAgent)(this)).RemoveDomainCredentials(inValue);
            return retVal.RemoveDomainCredentialsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.RegisterResponse LabProxy.iLabSbServiceReference.IProcessAgent.Register(LabProxy.iLabSbServiceReference.RegisterRequest request) {
            return base.Channel.Register(request);
        }
        
        public void Register(LabProxy.iLabSbServiceReference.AgentAuthHeader AgentAuthHeader, string registerGuid, ServiceDescription[] info) {
            LabProxy.iLabSbServiceReference.RegisterRequest inValue = new LabProxy.iLabSbServiceReference.RegisterRequest();
            inValue.AgentAuthHeader = AgentAuthHeader;
            inValue.registerGuid = registerGuid;
            inValue.info = info;
            LabProxy.iLabSbServiceReference.RegisterResponse retVal = ((LabProxy.iLabSbServiceReference.IProcessAgent)(this)).Register(inValue);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", ConfigurationName="iLabSbServiceReference.IServiceBroker")]
    public interface IServiceBroker {
        
        // CODEGEN: Generating message contract since message SaveClientDataRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/iLabs/Type/SaveClientItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.SaveClientDataResponse SaveClientData(LabProxy.iLabSbServiceReference.SaveClientDataRequest request);
        
        // CODEGEN: Generating message contract since message LoadClientDataRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/iLabs/Type/LoadClientItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.LoadClientDataResponse LoadClientData(LabProxy.iLabSbServiceReference.LoadClientDataRequest request);
        
        // CODEGEN: Generating message contract since message DeleteClientDataRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/iLabs/Type/DeleteClientItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.DeleteClientDataResponse DeleteClientData(LabProxy.iLabSbServiceReference.DeleteClientDataRequest request);
        
        // CODEGEN: Generating message contract since message ListClientDataItemsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/iLabs/Type/ListAllClientItems", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.ListClientDataItemsResponse ListClientDataItems(LabProxy.iLabSbServiceReference.ListClientDataItemsRequest request);
        
        // CODEGEN: Generating message contract since message OpenExperimentRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/iLabs/Services/OpenExperiment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.OpenExperimentResponse OpenExperiment(LabProxy.iLabSbServiceReference.OpenExperimentRequest request);
        
        // CODEGEN: Generating message contract since message AgentCloseExperimentRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/iLabs/Services/AgentCloseExperiment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.AgentCloseExperimentResponse AgentCloseExperiment(LabProxy.iLabSbServiceReference.AgentCloseExperimentRequest request);
        
        // CODEGEN: Generating message contract since message ClientCloseExperimentRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/iLabs/Services/ClientCloseExperiment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.ClientCloseExperimentResponse ClientCloseExperiment(LabProxy.iLabSbServiceReference.ClientCloseExperimentRequest request);
        
        // CODEGEN: Generating message contract since message RetrieveExperimentIdsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/iLabs/Services/RetrieveExperimentIds", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.RetrieveExperimentIdsResponse RetrieveExperimentIds(LabProxy.iLabSbServiceReference.RetrieveExperimentIdsRequest request);
        
        // CODEGEN: Generating message contract since message RetrieveExperimentRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/iLabs/Services/RetrieveExperiment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.RetrieveExperimentResponse RetrieveExperiment(LabProxy.iLabSbServiceReference.RetrieveExperimentRequest request);
        
        // CODEGEN: Generating message contract since message RetrieveExperimentSummaryRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/iLabs/Services/RetrieveExperimentSummary", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.RetrieveExperimentSummaryResponse RetrieveExperimentSummary(LabProxy.iLabSbServiceReference.RetrieveExperimentSummaryRequest request);
        
        // CODEGEN: Generating message contract since message RetrieveExperimentRecordsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/iLabs/Services/RetrieveExperimentRecords", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.RetrieveExperimentRecordsResponse RetrieveExperimentRecords(LabProxy.iLabSbServiceReference.RetrieveExperimentRecordsRequest request);
        
        // CODEGEN: Generating message contract since message RequestExperimentAccessRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/iLabs/Services/RequestExperimentAccess", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.RequestExperimentAccessResponse RequestExperimentAccess(LabProxy.iLabSbServiceReference.RequestExperimentAccessRequest request);
        
        // CODEGEN: Generating message contract since message SetAnnotationRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/iLabs/Services/SetAnnotation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.SetAnnotationResponse SetAnnotation(LabProxy.iLabSbServiceReference.SetAnnotationRequest request);
        
        // CODEGEN: Generating message contract since message GetAnnotationRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/iLabs/Services/GetAnnotation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.GetAnnotationResponse GetAnnotation(LabProxy.iLabSbServiceReference.GetAnnotationRequest request);
        
        // CODEGEN: Generating message contract since message RevokeReservationRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/iLabs/Services/RevokeReservation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.RevokeReservationResponse RevokeReservation(LabProxy.iLabSbServiceReference.RevokeReservationRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SaveClientData", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class SaveClientDataRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu/iLabs/type")]
        public LabProxy.iLabSbServiceReference.OperationAuthHeader OperationAuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=0)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=1)]
        public string itemValue;
        
        public SaveClientDataRequest() {
        }
        
        public SaveClientDataRequest(LabProxy.iLabSbServiceReference.OperationAuthHeader OperationAuthHeader, string name, string itemValue) {
            this.OperationAuthHeader = OperationAuthHeader;
            this.name = name;
            this.itemValue = itemValue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SaveClientDataResponse", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class SaveClientDataResponse {
        
        public SaveClientDataResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadClientData", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class LoadClientDataRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu/iLabs/type")]
        public LabProxy.iLabSbServiceReference.OperationAuthHeader OperationAuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=0)]
        public string name;
        
        public LoadClientDataRequest() {
        }
        
        public LoadClientDataRequest(LabProxy.iLabSbServiceReference.OperationAuthHeader OperationAuthHeader, string name) {
            this.OperationAuthHeader = OperationAuthHeader;
            this.name = name;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadClientDataResponse", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class LoadClientDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=0)]
        public string LoadClientDataResult;
        
        public LoadClientDataResponse() {
        }
        
        public LoadClientDataResponse(string LoadClientDataResult) {
            this.LoadClientDataResult = LoadClientDataResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteClientData", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class DeleteClientDataRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu/iLabs/type")]
        public LabProxy.iLabSbServiceReference.OperationAuthHeader OperationAuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=0)]
        public string name;
        
        public DeleteClientDataRequest() {
        }
        
        public DeleteClientDataRequest(LabProxy.iLabSbServiceReference.OperationAuthHeader OperationAuthHeader, string name) {
            this.OperationAuthHeader = OperationAuthHeader;
            this.name = name;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteClientDataResponse", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class DeleteClientDataResponse {
        
        public DeleteClientDataResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListClientDataItems", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class ListClientDataItemsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu/iLabs/type")]
        public LabProxy.iLabSbServiceReference.OperationAuthHeader OperationAuthHeader;
        
        public ListClientDataItemsRequest() {
        }
        
        public ListClientDataItemsRequest(LabProxy.iLabSbServiceReference.OperationAuthHeader OperationAuthHeader) {
            this.OperationAuthHeader = OperationAuthHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListClientDataItemsResponse", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class ListClientDataItemsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=0)]
        public string[] ListClientDataItemsResult;
        
        public ListClientDataItemsResponse() {
        }
        
        public ListClientDataItemsResponse(string[] ListClientDataItemsResult) {
            this.ListClientDataItemsResult = ListClientDataItemsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OpenExperiment", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class OpenExperimentRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu/iLabs/type")]
        public LabProxy.iLabSbServiceReference.OperationAuthHeader OperationAuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=0)]
        public long experimentId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=1)]
        public long duration;
        
        public OpenExperimentRequest() {
        }
        
        public OpenExperimentRequest(LabProxy.iLabSbServiceReference.OperationAuthHeader OperationAuthHeader, long experimentId, long duration) {
            this.OperationAuthHeader = OperationAuthHeader;
            this.experimentId = experimentId;
            this.duration = duration;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OpenExperimentResponse", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class OpenExperimentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=0)]
        public LabProxy.iLabSbServiceReference.StorageStatus OpenExperimentResult;
        
        public OpenExperimentResponse() {
        }
        
        public OpenExperimentResponse(LabProxy.iLabSbServiceReference.StorageStatus OpenExperimentResult) {
            this.OpenExperimentResult = OpenExperimentResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AgentCloseExperiment", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class AgentCloseExperimentRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu/iLabs/type")]
        public LabProxy.iLabSbServiceReference.AgentAuthHeader AgentAuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/type", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public LabProxy.iLabSbServiceReference.Coupon coupon;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=1)]
        public long experimentId;
        
        public AgentCloseExperimentRequest() {
        }
        
        public AgentCloseExperimentRequest(LabProxy.iLabSbServiceReference.AgentAuthHeader AgentAuthHeader, LabProxy.iLabSbServiceReference.Coupon coupon, long experimentId) {
            this.AgentAuthHeader = AgentAuthHeader;
            this.coupon = coupon;
            this.experimentId = experimentId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AgentCloseExperimentResponse", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class AgentCloseExperimentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=0)]
        public LabProxy.iLabSbServiceReference.StorageStatus AgentCloseExperimentResult;
        
        public AgentCloseExperimentResponse() {
        }
        
        public AgentCloseExperimentResponse(LabProxy.iLabSbServiceReference.StorageStatus AgentCloseExperimentResult) {
            this.AgentCloseExperimentResult = AgentCloseExperimentResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ClientCloseExperiment", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class ClientCloseExperimentRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu/iLabs/type")]
        public LabProxy.iLabSbServiceReference.OperationAuthHeader OperationAuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=0)]
        public long experimentId;
        
        public ClientCloseExperimentRequest() {
        }
        
        public ClientCloseExperimentRequest(LabProxy.iLabSbServiceReference.OperationAuthHeader OperationAuthHeader, long experimentId) {
            this.OperationAuthHeader = OperationAuthHeader;
            this.experimentId = experimentId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ClientCloseExperimentResponse", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class ClientCloseExperimentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=0)]
        public LabProxy.iLabSbServiceReference.StorageStatus ClientCloseExperimentResult;
        
        public ClientCloseExperimentResponse() {
        }
        
        public ClientCloseExperimentResponse(LabProxy.iLabSbServiceReference.StorageStatus ClientCloseExperimentResult) {
            this.ClientCloseExperimentResult = ClientCloseExperimentResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RetrieveExperimentIds", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class RetrieveExperimentIdsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu/iLabs/type")]
        public LabProxy.iLabSbServiceReference.OperationAuthHeader OperationAuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=0)]
        public Criterion[] carray;
        
        public RetrieveExperimentIdsRequest() {
        }
        
        public RetrieveExperimentIdsRequest(LabProxy.iLabSbServiceReference.OperationAuthHeader OperationAuthHeader, Criterion[] carray) {
            this.OperationAuthHeader = OperationAuthHeader;
            this.carray = carray;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RetrieveExperimentIdsResponse", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class RetrieveExperimentIdsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=0)]
        public long[] RetrieveExperimentIdsResult;
        
        public RetrieveExperimentIdsResponse() {
        }
        
        public RetrieveExperimentIdsResponse(long[] RetrieveExperimentIdsResult) {
            this.RetrieveExperimentIdsResult = RetrieveExperimentIdsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RetrieveExperiment", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class RetrieveExperimentRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu/iLabs/type")]
        public LabProxy.iLabSbServiceReference.OperationAuthHeader OperationAuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=0)]
        public long experimentID;
        
        public RetrieveExperimentRequest() {
        }
        
        public RetrieveExperimentRequest(LabProxy.iLabSbServiceReference.OperationAuthHeader OperationAuthHeader, long experimentID) {
            this.OperationAuthHeader = OperationAuthHeader;
            this.experimentID = experimentID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RetrieveExperimentResponse", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class RetrieveExperimentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=0)]
        public LabProxy.iLabSbServiceReference.Experiment RetrieveExperimentResult;
        
        public RetrieveExperimentResponse() {
        }
        
        public RetrieveExperimentResponse(LabProxy.iLabSbServiceReference.Experiment RetrieveExperimentResult) {
            this.RetrieveExperimentResult = RetrieveExperimentResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RetrieveExperimentSummary", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class RetrieveExperimentSummaryRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu/iLabs/type")]
        public LabProxy.iLabSbServiceReference.OperationAuthHeader OperationAuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=0)]
        public Criterion[] carray;
        
        public RetrieveExperimentSummaryRequest() {
        }
        
        public RetrieveExperimentSummaryRequest(LabProxy.iLabSbServiceReference.OperationAuthHeader OperationAuthHeader, Criterion[] carray) {
            this.OperationAuthHeader = OperationAuthHeader;
            this.carray = carray;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RetrieveExperimentSummaryResponse", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class RetrieveExperimentSummaryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=0)]
        public ExperimentSummary[] RetrieveExperimentSummaryResult;
        
        public RetrieveExperimentSummaryResponse() {
        }
        
        public RetrieveExperimentSummaryResponse(ExperimentSummary[] RetrieveExperimentSummaryResult) {
            this.RetrieveExperimentSummaryResult = RetrieveExperimentSummaryResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RetrieveExperimentRecords", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class RetrieveExperimentRecordsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu/iLabs/type")]
        public LabProxy.iLabSbServiceReference.OperationAuthHeader OperationAuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=0)]
        public long experimentID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=1)]
        public Criterion[] carray;
        
        public RetrieveExperimentRecordsRequest() {
        }
        
        public RetrieveExperimentRecordsRequest(LabProxy.iLabSbServiceReference.OperationAuthHeader OperationAuthHeader, long experimentID, Criterion[] carray) {
            this.OperationAuthHeader = OperationAuthHeader;
            this.experimentID = experimentID;
            this.carray = carray;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RetrieveExperimentRecordsResponse", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class RetrieveExperimentRecordsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=0)]
        public ExperimentRecord[] RetrieveExperimentRecordsResult;
        
        public RetrieveExperimentRecordsResponse() {
        }
        
        public RetrieveExperimentRecordsResponse(ExperimentRecord[] RetrieveExperimentRecordsResult) {
            this.RetrieveExperimentRecordsResult = RetrieveExperimentRecordsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RequestExperimentAccess", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class RequestExperimentAccessRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu/iLabs/type")]
        public LabProxy.iLabSbServiceReference.OperationAuthHeader OperationAuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=0)]
        public long experimentID;
        
        public RequestExperimentAccessRequest() {
        }
        
        public RequestExperimentAccessRequest(LabProxy.iLabSbServiceReference.OperationAuthHeader OperationAuthHeader, long experimentID) {
            this.OperationAuthHeader = OperationAuthHeader;
            this.experimentID = experimentID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RequestExperimentAccessResponse", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class RequestExperimentAccessResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/type", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public LabProxy.iLabSbServiceReference.Coupon RequestExperimentAccessResult;
        
        public RequestExperimentAccessResponse() {
        }
        
        public RequestExperimentAccessResponse(LabProxy.iLabSbServiceReference.Coupon RequestExperimentAccessResult) {
            this.RequestExperimentAccessResult = RequestExperimentAccessResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetAnnotation", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class SetAnnotationRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu/iLabs/type")]
        public LabProxy.iLabSbServiceReference.OperationAuthHeader OperationAuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=0)]
        public int experimentID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=1)]
        public string annotation;
        
        public SetAnnotationRequest() {
        }
        
        public SetAnnotationRequest(LabProxy.iLabSbServiceReference.OperationAuthHeader OperationAuthHeader, int experimentID, string annotation) {
            this.OperationAuthHeader = OperationAuthHeader;
            this.experimentID = experimentID;
            this.annotation = annotation;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetAnnotationResponse", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class SetAnnotationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=0)]
        public string SetAnnotationResult;
        
        public SetAnnotationResponse() {
        }
        
        public SetAnnotationResponse(string SetAnnotationResult) {
            this.SetAnnotationResult = SetAnnotationResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAnnotation", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class GetAnnotationRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu/iLabs/type")]
        public LabProxy.iLabSbServiceReference.OperationAuthHeader OperationAuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=0)]
        public int experimentID;
        
        public GetAnnotationRequest() {
        }
        
        public GetAnnotationRequest(LabProxy.iLabSbServiceReference.OperationAuthHeader OperationAuthHeader, int experimentID) {
            this.OperationAuthHeader = OperationAuthHeader;
            this.experimentID = experimentID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAnnotationResponse", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class GetAnnotationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=0)]
        public string GetAnnotationResult;
        
        public GetAnnotationResponse() {
        }
        
        public GetAnnotationResponse(string GetAnnotationResult) {
            this.GetAnnotationResult = GetAnnotationResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RevokeReservation", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class RevokeReservationRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu/iLabs/type")]
        public LabProxy.iLabSbServiceReference.AgentAuthHeader AgentAuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=0)]
        public string serviceBrokerGuid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=1)]
        public string userName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=2)]
        public string groupName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=3)]
        public string labServerGuid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=4)]
        public string labClientGuid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=5)]
        public System.DateTime startTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=6)]
        public System.DateTime endTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=7)]
        public string message;
        
        public RevokeReservationRequest() {
        }
        
        public RevokeReservationRequest(LabProxy.iLabSbServiceReference.AgentAuthHeader AgentAuthHeader, string serviceBrokerGuid, string userName, string groupName, string labServerGuid, string labClientGuid, System.DateTime startTime, System.DateTime endTime, string message) {
            this.AgentAuthHeader = AgentAuthHeader;
            this.serviceBrokerGuid = serviceBrokerGuid;
            this.userName = userName;
            this.groupName = groupName;
            this.labServerGuid = labServerGuid;
            this.labClientGuid = labClientGuid;
            this.startTime = startTime;
            this.endTime = endTime;
            this.message = message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RevokeReservationResponse", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class RevokeReservationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=0)]
        public bool RevokeReservationResult;
        
        public RevokeReservationResponse() {
        }
        
        public RevokeReservationResponse(bool RevokeReservationResult) {
            this.RevokeReservationResult = RevokeReservationResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IServiceBrokerChannel : LabProxy.iLabSbServiceReference.IServiceBroker, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ServiceBrokerClient : System.ServiceModel.ClientBase<LabProxy.iLabSbServiceReference.IServiceBroker>, LabProxy.iLabSbServiceReference.IServiceBroker {
        
        public ServiceBrokerClient() {
        }
        
        public ServiceBrokerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceBrokerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceBrokerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceBrokerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.SaveClientDataResponse LabProxy.iLabSbServiceReference.IServiceBroker.SaveClientData(LabProxy.iLabSbServiceReference.SaveClientDataRequest request) {
            return base.Channel.SaveClientData(request);
        }
        
        public void SaveClientData(LabProxy.iLabSbServiceReference.OperationAuthHeader OperationAuthHeader, string name, string itemValue) {
            LabProxy.iLabSbServiceReference.SaveClientDataRequest inValue = new LabProxy.iLabSbServiceReference.SaveClientDataRequest();
            inValue.OperationAuthHeader = OperationAuthHeader;
            inValue.name = name;
            inValue.itemValue = itemValue;
            LabProxy.iLabSbServiceReference.SaveClientDataResponse retVal = ((LabProxy.iLabSbServiceReference.IServiceBroker)(this)).SaveClientData(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.LoadClientDataResponse LabProxy.iLabSbServiceReference.IServiceBroker.LoadClientData(LabProxy.iLabSbServiceReference.LoadClientDataRequest request) {
            return base.Channel.LoadClientData(request);
        }
        
        public string LoadClientData(LabProxy.iLabSbServiceReference.OperationAuthHeader OperationAuthHeader, string name) {
            LabProxy.iLabSbServiceReference.LoadClientDataRequest inValue = new LabProxy.iLabSbServiceReference.LoadClientDataRequest();
            inValue.OperationAuthHeader = OperationAuthHeader;
            inValue.name = name;
            LabProxy.iLabSbServiceReference.LoadClientDataResponse retVal = ((LabProxy.iLabSbServiceReference.IServiceBroker)(this)).LoadClientData(inValue);
            return retVal.LoadClientDataResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.DeleteClientDataResponse LabProxy.iLabSbServiceReference.IServiceBroker.DeleteClientData(LabProxy.iLabSbServiceReference.DeleteClientDataRequest request) {
            return base.Channel.DeleteClientData(request);
        }
        
        public void DeleteClientData(LabProxy.iLabSbServiceReference.OperationAuthHeader OperationAuthHeader, string name) {
            LabProxy.iLabSbServiceReference.DeleteClientDataRequest inValue = new LabProxy.iLabSbServiceReference.DeleteClientDataRequest();
            inValue.OperationAuthHeader = OperationAuthHeader;
            inValue.name = name;
            LabProxy.iLabSbServiceReference.DeleteClientDataResponse retVal = ((LabProxy.iLabSbServiceReference.IServiceBroker)(this)).DeleteClientData(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.ListClientDataItemsResponse LabProxy.iLabSbServiceReference.IServiceBroker.ListClientDataItems(LabProxy.iLabSbServiceReference.ListClientDataItemsRequest request) {
            return base.Channel.ListClientDataItems(request);
        }
        
        public string[] ListClientDataItems(LabProxy.iLabSbServiceReference.OperationAuthHeader OperationAuthHeader) {
            LabProxy.iLabSbServiceReference.ListClientDataItemsRequest inValue = new LabProxy.iLabSbServiceReference.ListClientDataItemsRequest();
            inValue.OperationAuthHeader = OperationAuthHeader;
            LabProxy.iLabSbServiceReference.ListClientDataItemsResponse retVal = ((LabProxy.iLabSbServiceReference.IServiceBroker)(this)).ListClientDataItems(inValue);
            return retVal.ListClientDataItemsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.OpenExperimentResponse LabProxy.iLabSbServiceReference.IServiceBroker.OpenExperiment(LabProxy.iLabSbServiceReference.OpenExperimentRequest request) {
            return base.Channel.OpenExperiment(request);
        }
        
        public LabProxy.iLabSbServiceReference.StorageStatus OpenExperiment(LabProxy.iLabSbServiceReference.OperationAuthHeader OperationAuthHeader, long experimentId, long duration) {
            LabProxy.iLabSbServiceReference.OpenExperimentRequest inValue = new LabProxy.iLabSbServiceReference.OpenExperimentRequest();
            inValue.OperationAuthHeader = OperationAuthHeader;
            inValue.experimentId = experimentId;
            inValue.duration = duration;
            LabProxy.iLabSbServiceReference.OpenExperimentResponse retVal = ((LabProxy.iLabSbServiceReference.IServiceBroker)(this)).OpenExperiment(inValue);
            return retVal.OpenExperimentResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.AgentCloseExperimentResponse LabProxy.iLabSbServiceReference.IServiceBroker.AgentCloseExperiment(LabProxy.iLabSbServiceReference.AgentCloseExperimentRequest request) {
            return base.Channel.AgentCloseExperiment(request);
        }
        
        public LabProxy.iLabSbServiceReference.StorageStatus AgentCloseExperiment(LabProxy.iLabSbServiceReference.AgentAuthHeader AgentAuthHeader, LabProxy.iLabSbServiceReference.Coupon coupon, long experimentId) {
            LabProxy.iLabSbServiceReference.AgentCloseExperimentRequest inValue = new LabProxy.iLabSbServiceReference.AgentCloseExperimentRequest();
            inValue.AgentAuthHeader = AgentAuthHeader;
            inValue.coupon = coupon;
            inValue.experimentId = experimentId;
            LabProxy.iLabSbServiceReference.AgentCloseExperimentResponse retVal = ((LabProxy.iLabSbServiceReference.IServiceBroker)(this)).AgentCloseExperiment(inValue);
            return retVal.AgentCloseExperimentResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.ClientCloseExperimentResponse LabProxy.iLabSbServiceReference.IServiceBroker.ClientCloseExperiment(LabProxy.iLabSbServiceReference.ClientCloseExperimentRequest request) {
            return base.Channel.ClientCloseExperiment(request);
        }
        
        public LabProxy.iLabSbServiceReference.StorageStatus ClientCloseExperiment(LabProxy.iLabSbServiceReference.OperationAuthHeader OperationAuthHeader, long experimentId) {
            LabProxy.iLabSbServiceReference.ClientCloseExperimentRequest inValue = new LabProxy.iLabSbServiceReference.ClientCloseExperimentRequest();
            inValue.OperationAuthHeader = OperationAuthHeader;
            inValue.experimentId = experimentId;
            LabProxy.iLabSbServiceReference.ClientCloseExperimentResponse retVal = ((LabProxy.iLabSbServiceReference.IServiceBroker)(this)).ClientCloseExperiment(inValue);
            return retVal.ClientCloseExperimentResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.RetrieveExperimentIdsResponse LabProxy.iLabSbServiceReference.IServiceBroker.RetrieveExperimentIds(LabProxy.iLabSbServiceReference.RetrieveExperimentIdsRequest request) {
            return base.Channel.RetrieveExperimentIds(request);
        }
        
        public long[] RetrieveExperimentIds(LabProxy.iLabSbServiceReference.OperationAuthHeader OperationAuthHeader, Criterion[] carray) {
            LabProxy.iLabSbServiceReference.RetrieveExperimentIdsRequest inValue = new LabProxy.iLabSbServiceReference.RetrieveExperimentIdsRequest();
            inValue.OperationAuthHeader = OperationAuthHeader;
            inValue.carray = carray;
            LabProxy.iLabSbServiceReference.RetrieveExperimentIdsResponse retVal = ((LabProxy.iLabSbServiceReference.IServiceBroker)(this)).RetrieveExperimentIds(inValue);
            return retVal.RetrieveExperimentIdsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.RetrieveExperimentResponse LabProxy.iLabSbServiceReference.IServiceBroker.RetrieveExperiment(LabProxy.iLabSbServiceReference.RetrieveExperimentRequest request) {
            return base.Channel.RetrieveExperiment(request);
        }
        
        public LabProxy.iLabSbServiceReference.Experiment RetrieveExperiment(LabProxy.iLabSbServiceReference.OperationAuthHeader OperationAuthHeader, long experimentID) {
            LabProxy.iLabSbServiceReference.RetrieveExperimentRequest inValue = new LabProxy.iLabSbServiceReference.RetrieveExperimentRequest();
            inValue.OperationAuthHeader = OperationAuthHeader;
            inValue.experimentID = experimentID;
            LabProxy.iLabSbServiceReference.RetrieveExperimentResponse retVal = ((LabProxy.iLabSbServiceReference.IServiceBroker)(this)).RetrieveExperiment(inValue);
            return retVal.RetrieveExperimentResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.RetrieveExperimentSummaryResponse LabProxy.iLabSbServiceReference.IServiceBroker.RetrieveExperimentSummary(LabProxy.iLabSbServiceReference.RetrieveExperimentSummaryRequest request) {
            return base.Channel.RetrieveExperimentSummary(request);
        }
        
        public ExperimentSummary[] RetrieveExperimentSummary(LabProxy.iLabSbServiceReference.OperationAuthHeader OperationAuthHeader, Criterion[] carray) {
            LabProxy.iLabSbServiceReference.RetrieveExperimentSummaryRequest inValue = new LabProxy.iLabSbServiceReference.RetrieveExperimentSummaryRequest();
            inValue.OperationAuthHeader = OperationAuthHeader;
            inValue.carray = carray;
            LabProxy.iLabSbServiceReference.RetrieveExperimentSummaryResponse retVal = ((LabProxy.iLabSbServiceReference.IServiceBroker)(this)).RetrieveExperimentSummary(inValue);
            return retVal.RetrieveExperimentSummaryResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.RetrieveExperimentRecordsResponse LabProxy.iLabSbServiceReference.IServiceBroker.RetrieveExperimentRecords(LabProxy.iLabSbServiceReference.RetrieveExperimentRecordsRequest request) {
            return base.Channel.RetrieveExperimentRecords(request);
        }
        
        public ExperimentRecord[] RetrieveExperimentRecords(LabProxy.iLabSbServiceReference.OperationAuthHeader OperationAuthHeader, long experimentID, Criterion[] carray) {
            LabProxy.iLabSbServiceReference.RetrieveExperimentRecordsRequest inValue = new LabProxy.iLabSbServiceReference.RetrieveExperimentRecordsRequest();
            inValue.OperationAuthHeader = OperationAuthHeader;
            inValue.experimentID = experimentID;
            inValue.carray = carray;
            LabProxy.iLabSbServiceReference.RetrieveExperimentRecordsResponse retVal = ((LabProxy.iLabSbServiceReference.IServiceBroker)(this)).RetrieveExperimentRecords(inValue);
            return retVal.RetrieveExperimentRecordsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.RequestExperimentAccessResponse LabProxy.iLabSbServiceReference.IServiceBroker.RequestExperimentAccess(LabProxy.iLabSbServiceReference.RequestExperimentAccessRequest request) {
            return base.Channel.RequestExperimentAccess(request);
        }
        
        public LabProxy.iLabSbServiceReference.Coupon RequestExperimentAccess(LabProxy.iLabSbServiceReference.OperationAuthHeader OperationAuthHeader, long experimentID) {
            LabProxy.iLabSbServiceReference.RequestExperimentAccessRequest inValue = new LabProxy.iLabSbServiceReference.RequestExperimentAccessRequest();
            inValue.OperationAuthHeader = OperationAuthHeader;
            inValue.experimentID = experimentID;
            LabProxy.iLabSbServiceReference.RequestExperimentAccessResponse retVal = ((LabProxy.iLabSbServiceReference.IServiceBroker)(this)).RequestExperimentAccess(inValue);
            return retVal.RequestExperimentAccessResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.SetAnnotationResponse LabProxy.iLabSbServiceReference.IServiceBroker.SetAnnotation(LabProxy.iLabSbServiceReference.SetAnnotationRequest request) {
            return base.Channel.SetAnnotation(request);
        }
        
        public string SetAnnotation(LabProxy.iLabSbServiceReference.OperationAuthHeader OperationAuthHeader, int experimentID, string annotation) {
            LabProxy.iLabSbServiceReference.SetAnnotationRequest inValue = new LabProxy.iLabSbServiceReference.SetAnnotationRequest();
            inValue.OperationAuthHeader = OperationAuthHeader;
            inValue.experimentID = experimentID;
            inValue.annotation = annotation;
            LabProxy.iLabSbServiceReference.SetAnnotationResponse retVal = ((LabProxy.iLabSbServiceReference.IServiceBroker)(this)).SetAnnotation(inValue);
            return retVal.SetAnnotationResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.GetAnnotationResponse LabProxy.iLabSbServiceReference.IServiceBroker.GetAnnotation(LabProxy.iLabSbServiceReference.GetAnnotationRequest request) {
            return base.Channel.GetAnnotation(request);
        }
        
        public string GetAnnotation(LabProxy.iLabSbServiceReference.OperationAuthHeader OperationAuthHeader, int experimentID) {
            LabProxy.iLabSbServiceReference.GetAnnotationRequest inValue = new LabProxy.iLabSbServiceReference.GetAnnotationRequest();
            inValue.OperationAuthHeader = OperationAuthHeader;
            inValue.experimentID = experimentID;
            LabProxy.iLabSbServiceReference.GetAnnotationResponse retVal = ((LabProxy.iLabSbServiceReference.IServiceBroker)(this)).GetAnnotation(inValue);
            return retVal.GetAnnotationResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.RevokeReservationResponse LabProxy.iLabSbServiceReference.IServiceBroker.RevokeReservation(LabProxy.iLabSbServiceReference.RevokeReservationRequest request) {
            return base.Channel.RevokeReservation(request);
        }
        
        public bool RevokeReservation(LabProxy.iLabSbServiceReference.AgentAuthHeader AgentAuthHeader, string serviceBrokerGuid, string userName, string groupName, string labServerGuid, string labClientGuid, System.DateTime startTime, System.DateTime endTime, string message) {
            LabProxy.iLabSbServiceReference.RevokeReservationRequest inValue = new LabProxy.iLabSbServiceReference.RevokeReservationRequest();
            inValue.AgentAuthHeader = AgentAuthHeader;
            inValue.serviceBrokerGuid = serviceBrokerGuid;
            inValue.userName = userName;
            inValue.groupName = groupName;
            inValue.labServerGuid = labServerGuid;
            inValue.labClientGuid = labClientGuid;
            inValue.startTime = startTime;
            inValue.endTime = endTime;
            inValue.message = message;
            LabProxy.iLabSbServiceReference.RevokeReservationResponse retVal = ((LabProxy.iLabSbServiceReference.IServiceBroker)(this)).RevokeReservation(inValue);
            return retVal.RevokeReservationResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", ConfigurationName="iLabSbServiceReference.ITicketIssuer")]
    public interface ITicketIssuer {
        
        // CODEGEN: Generating message contract since message AddTicketRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/iLabs/Services/AddTicket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.AddTicketResponse AddTicket(LabProxy.iLabSbServiceReference.AddTicketRequest request);
        
        // CODEGEN: Generating message contract since message CreateTicketRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/iLabs/Services/CreateTicket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.CreateTicketResponse CreateTicket(LabProxy.iLabSbServiceReference.CreateTicketRequest request);
        
        // CODEGEN: Generating message contract since message RedeemTicketRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/iLabs/Services/RedeemTicket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.RedeemTicketResponse RedeemTicket(LabProxy.iLabSbServiceReference.RedeemTicketRequest request);
        
        // CODEGEN: Generating message contract since message RequestTicketCancellationRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://ilab.mit.edu/iLabs/Services/RequestTicketCancellation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AuthenticationHeader))]
        LabProxy.iLabSbServiceReference.RequestTicketCancellationResponse RequestTicketCancellation(LabProxy.iLabSbServiceReference.RequestTicketCancellationRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddTicket", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class AddTicketRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu/iLabs/type")]
        public LabProxy.iLabSbServiceReference.AgentAuthHeader AgentAuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/type", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public LabProxy.iLabSbServiceReference.Coupon coupon;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=1)]
        public string type;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=2)]
        public string redeemerGuid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=3)]
        public long duration;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=4)]
        public string payload;
        
        public AddTicketRequest() {
        }
        
        public AddTicketRequest(LabProxy.iLabSbServiceReference.AgentAuthHeader AgentAuthHeader, LabProxy.iLabSbServiceReference.Coupon coupon, string type, string redeemerGuid, long duration, string payload) {
            this.AgentAuthHeader = AgentAuthHeader;
            this.coupon = coupon;
            this.type = type;
            this.redeemerGuid = redeemerGuid;
            this.duration = duration;
            this.payload = payload;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddTicketResponse", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class AddTicketResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/type", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public LabProxy.iLabSbServiceReference.Ticket AddTicketResult;
        
        public AddTicketResponse() {
        }
        
        public AddTicketResponse(LabProxy.iLabSbServiceReference.Ticket AddTicketResult) {
            this.AddTicketResult = AddTicketResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateTicket", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class CreateTicketRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu/iLabs/type")]
        public LabProxy.iLabSbServiceReference.AgentAuthHeader AgentAuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=0)]
        public string type;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=1)]
        public string redeemerGuid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=2)]
        public long duration;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=3)]
        public string payload;
        
        public CreateTicketRequest() {
        }
        
        public CreateTicketRequest(LabProxy.iLabSbServiceReference.AgentAuthHeader AgentAuthHeader, string type, string redeemerGuid, long duration, string payload) {
            this.AgentAuthHeader = AgentAuthHeader;
            this.type = type;
            this.redeemerGuid = redeemerGuid;
            this.duration = duration;
            this.payload = payload;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateTicketResponse", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class CreateTicketResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/type", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public LabProxy.iLabSbServiceReference.Coupon CreateTicketResult;
        
        public CreateTicketResponse() {
        }
        
        public CreateTicketResponse(LabProxy.iLabSbServiceReference.Coupon CreateTicketResult) {
            this.CreateTicketResult = CreateTicketResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RedeemTicket", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class RedeemTicketRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu/iLabs/type")]
        public LabProxy.iLabSbServiceReference.AgentAuthHeader AgentAuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/type", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public LabProxy.iLabSbServiceReference.Coupon coupon;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=1)]
        public string type;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=2)]
        public string redeemerGuid;
        
        public RedeemTicketRequest() {
        }
        
        public RedeemTicketRequest(LabProxy.iLabSbServiceReference.AgentAuthHeader AgentAuthHeader, LabProxy.iLabSbServiceReference.Coupon coupon, string type, string redeemerGuid) {
            this.AgentAuthHeader = AgentAuthHeader;
            this.coupon = coupon;
            this.type = type;
            this.redeemerGuid = redeemerGuid;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RedeemTicketResponse", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class RedeemTicketResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/type", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public LabProxy.iLabSbServiceReference.Ticket RedeemTicketResult;
        
        public RedeemTicketResponse() {
        }
        
        public RedeemTicketResponse(LabProxy.iLabSbServiceReference.Ticket RedeemTicketResult) {
            this.RedeemTicketResult = RedeemTicketResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RequestTicketCancellation", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class RequestTicketCancellationRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ilab.mit.edu/iLabs/type")]
        public LabProxy.iLabSbServiceReference.AgentAuthHeader AgentAuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/type", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public LabProxy.iLabSbServiceReference.Coupon coupon;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=1)]
        public string type;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=2)]
        public string redeemerGuid;
        
        public RequestTicketCancellationRequest() {
        }
        
        public RequestTicketCancellationRequest(LabProxy.iLabSbServiceReference.AgentAuthHeader AgentAuthHeader, LabProxy.iLabSbServiceReference.Coupon coupon, string type, string redeemerGuid) {
            this.AgentAuthHeader = AgentAuthHeader;
            this.coupon = coupon;
            this.type = type;
            this.redeemerGuid = redeemerGuid;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RequestTicketCancellationResponse", WrapperNamespace="http://ilab.mit.edu/iLabs/Services", IsWrapped=true)]
    public partial class RequestTicketCancellationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ilab.mit.edu/iLabs/Services", Order=0)]
        public bool RequestTicketCancellationResult;
        
        public RequestTicketCancellationResponse() {
        }
        
        public RequestTicketCancellationResponse(bool RequestTicketCancellationResult) {
            this.RequestTicketCancellationResult = RequestTicketCancellationResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface ITicketIssuerChannel : LabProxy.iLabSbServiceReference.ITicketIssuer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class TicketIssuerClient : System.ServiceModel.ClientBase<LabProxy.iLabSbServiceReference.ITicketIssuer>, LabProxy.iLabSbServiceReference.ITicketIssuer {
        
        public TicketIssuerClient() {
        }
        
        public TicketIssuerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TicketIssuerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TicketIssuerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TicketIssuerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.AddTicketResponse LabProxy.iLabSbServiceReference.ITicketIssuer.AddTicket(LabProxy.iLabSbServiceReference.AddTicketRequest request) {
            return base.Channel.AddTicket(request);
        }
        
        public LabProxy.iLabSbServiceReference.Ticket AddTicket(LabProxy.iLabSbServiceReference.AgentAuthHeader AgentAuthHeader, LabProxy.iLabSbServiceReference.Coupon coupon, string type, string redeemerGuid, long duration, string payload) {
            LabProxy.iLabSbServiceReference.AddTicketRequest inValue = new LabProxy.iLabSbServiceReference.AddTicketRequest();
            inValue.AgentAuthHeader = AgentAuthHeader;
            inValue.coupon = coupon;
            inValue.type = type;
            inValue.redeemerGuid = redeemerGuid;
            inValue.duration = duration;
            inValue.payload = payload;
            LabProxy.iLabSbServiceReference.AddTicketResponse retVal = ((LabProxy.iLabSbServiceReference.ITicketIssuer)(this)).AddTicket(inValue);
            return retVal.AddTicketResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.CreateTicketResponse LabProxy.iLabSbServiceReference.ITicketIssuer.CreateTicket(LabProxy.iLabSbServiceReference.CreateTicketRequest request) {
            return base.Channel.CreateTicket(request);
        }
        
        public LabProxy.iLabSbServiceReference.Coupon CreateTicket(LabProxy.iLabSbServiceReference.AgentAuthHeader AgentAuthHeader, string type, string redeemerGuid, long duration, string payload) {
            LabProxy.iLabSbServiceReference.CreateTicketRequest inValue = new LabProxy.iLabSbServiceReference.CreateTicketRequest();
            inValue.AgentAuthHeader = AgentAuthHeader;
            inValue.type = type;
            inValue.redeemerGuid = redeemerGuid;
            inValue.duration = duration;
            inValue.payload = payload;
            LabProxy.iLabSbServiceReference.CreateTicketResponse retVal = ((LabProxy.iLabSbServiceReference.ITicketIssuer)(this)).CreateTicket(inValue);
            return retVal.CreateTicketResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.RedeemTicketResponse LabProxy.iLabSbServiceReference.ITicketIssuer.RedeemTicket(LabProxy.iLabSbServiceReference.RedeemTicketRequest request) {
            return base.Channel.RedeemTicket(request);
        }
        
        public LabProxy.iLabSbServiceReference.Ticket RedeemTicket(LabProxy.iLabSbServiceReference.AgentAuthHeader AgentAuthHeader, LabProxy.iLabSbServiceReference.Coupon coupon, string type, string redeemerGuid) {
            LabProxy.iLabSbServiceReference.RedeemTicketRequest inValue = new LabProxy.iLabSbServiceReference.RedeemTicketRequest();
            inValue.AgentAuthHeader = AgentAuthHeader;
            inValue.coupon = coupon;
            inValue.type = type;
            inValue.redeemerGuid = redeemerGuid;
            LabProxy.iLabSbServiceReference.RedeemTicketResponse retVal = ((LabProxy.iLabSbServiceReference.ITicketIssuer)(this)).RedeemTicket(inValue);
            return retVal.RedeemTicketResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabProxy.iLabSbServiceReference.RequestTicketCancellationResponse LabProxy.iLabSbServiceReference.ITicketIssuer.RequestTicketCancellation(LabProxy.iLabSbServiceReference.RequestTicketCancellationRequest request) {
            return base.Channel.RequestTicketCancellation(request);
        }
        
        public bool RequestTicketCancellation(LabProxy.iLabSbServiceReference.AgentAuthHeader AgentAuthHeader, LabProxy.iLabSbServiceReference.Coupon coupon, string type, string redeemerGuid) {
            LabProxy.iLabSbServiceReference.RequestTicketCancellationRequest inValue = new LabProxy.iLabSbServiceReference.RequestTicketCancellationRequest();
            inValue.AgentAuthHeader = AgentAuthHeader;
            inValue.coupon = coupon;
            inValue.type = type;
            inValue.redeemerGuid = redeemerGuid;
            LabProxy.iLabSbServiceReference.RequestTicketCancellationResponse retVal = ((LabProxy.iLabSbServiceReference.ITicketIssuer)(this)).RequestTicketCancellation(inValue);
            return retVal.RequestTicketCancellationResult;
        }
    }
}
